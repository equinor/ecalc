{
    "consumer_results": {
        "el-consumer-simple-compressor-model-with-timeslots": {
            "component_result": {
                "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                "id": "el-consumer-simple-compressor-model-with-timeslots",
                "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False] unit=<Unit.NONE: 'N/A'>",
                "periods": {
                    "periods": [
                        {
                            "end": "2011-01-01 00:00:00",
                            "start": "2010-01-01 00:00:00"
                        },
                        {
                            "end": "2012-01-01 00:00:00",
                            "start": "2011-01-01 00:00:00"
                        },
                        {
                            "end": "2013-01-01 00:00:00",
                            "start": "2012-01-01 00:00:00"
                        },
                        {
                            "end": "2014-01-01 00:00:00",
                            "start": "2013-01-01 00:00:00"
                        },
                        {
                            "end": "2015-01-01 00:00:00",
                            "start": "2014-01-01 00:00:00"
                        },
                        {
                            "end": "2016-01-01 00:00:00",
                            "start": "2015-01-01 00:00:00"
                        },
                        {
                            "end": "2017-01-01 00:00:00",
                            "start": "2016-01-01 00:00:00"
                        },
                        {
                            "end": "2018-01-01 00:00:00",
                            "start": "2017-01-01 00:00:00"
                        },
                        {
                            "end": "2019-01-01 00:00:00",
                            "start": "2018-01-01 00:00:00"
                        },
                        {
                            "end": "2020-01-01 00:00:00",
                            "start": "2019-01-01 00:00:00"
                        },
                        {
                            "end": "2021-01-01 00:00:00",
                            "start": "2020-01-01 00:00:00"
                        },
                        {
                            "end": "2022-01-01 00:00:00",
                            "start": "2021-01-01 00:00:00"
                        },
                        {
                            "end": "2023-01-01 00:00:00",
                            "start": "2022-01-01 00:00:00"
                        },
                        {
                            "end": "2024-01-01 00:00:00",
                            "start": "2023-01-01 00:00:00"
                        },
                        {
                            "end": "2025-01-01 00:00:00",
                            "start": "2024-01-01 00:00:00"
                        },
                        {
                            "end": "2026-01-01 00:00:00",
                            "start": "2025-01-01 00:00:00"
                        },
                        {
                            "end": "2027-01-01 00:00:00",
                            "start": "2026-01-01 00:00:00"
                        },
                        {
                            "end": "2028-01-01 00:00:00",
                            "start": "2027-01-01 00:00:00"
                        },
                        {
                            "end": "2029-01-01 00:00:00",
                            "start": "2028-01-01 00:00:00"
                        },
                        {
                            "end": "2030-01-01 00:00:00",
                            "start": "2029-01-01 00:00:00"
                        }
                    ]
                },
                "power": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                "rate_exceeds_maximum": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False] unit=<Unit.NONE: 'N/A'>",
                "recirculation_loss": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.449371, 1.449371, 1.449371, 1.449371, 1.449371, 1.449371, 1.449371, 1.449371, 1.449371, 1.449371, 1.449371, 1.449371, 1.449371] unit=<Unit.MEGA_WATT: 'MW'>",
                "typ": "comp"
            },
            "models": [
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[2.458919, 2.458919] unit=<Unit.MEGA_WATT: 'MW'>",
                    "failure_status": [
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH"
                    ],
                    "inlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            10.61314,
                            10.61314
                        ],
                        "density_kg_per_m3": [
                            16.19371,
                            16.19371
                        ],
                        "kappa": [
                            1.244485,
                            1.244485
                        ],
                        "pressure": [
                            20.0,
                            20.0
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            5000.0,
                            5000.0
                        ],
                        "temperature_kelvin": [
                            303.15,
                            303.15
                        ],
                        "z": [
                            0.953971,
                            0.953971
                        ]
                    },
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[False, False] unit=<Unit.NONE: 'N/A'>",
                    "max_standard_rate": [
                        NaN,
                        NaN
                    ],
                    "name": "el-consumer-simple-compressor-model-with-timeslots",
                    "outlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            2.602151,
                            2.602151
                        ],
                        "density_kg_per_m3": [
                            66.04774,
                            66.04774
                        ],
                        "kappa": [
                            1.190687,
                            1.190687
                        ],
                        "pressure": [
                            93.60992,
                            93.60992
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            5000.0,
                            5000.0
                        ],
                        "temperature_kelvin": [
                            361.5373,
                            361.5373
                        ],
                        "z": [
                            0.920734,
                            0.920734
                        ]
                    },
                    "periods": {
                        "periods": [
                            {
                                "end": "2018-01-01 00:00:00",
                                "start": "2017-01-01 00:00:00"
                            },
                            {
                                "end": "2019-01-01 00:00:00",
                                "start": "2018-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[2.458919, 2.458919] unit=<Unit.MEGA_WATT: 'MW'>",
                    "rate_sm3_day": [
                        5000.0,
                        5000.0
                    ],
                    "stage_results": [
                        {
                            "asv_recirculation_loss_mw": [
                                0.445051,
                                0.445051
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE"
                            ],
                            "energy_usage": [
                                0.449825,
                                0.449825
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c518550>",
                            "is_valid": [
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                171.8662,
                                171.8662
                            ],
                            "mass_rate_kg_per_hr": [
                                16193.71,
                                16193.71
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c518850>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                100.0,
                                100.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                100.0,
                                100.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                100.0,
                                100.0
                            ],
                            "power": [
                                0.449825,
                                0.449825
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN
                            ]
                        },
                        {
                            "asv_recirculation_loss_mw": [
                                1.00432,
                                1.00432
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE"
                            ],
                            "energy_usage": [
                                1.009094,
                                1.009094
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c519190>",
                            "is_valid": [
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                171.8662,
                                171.8662
                            ],
                            "mass_rate_kg_per_hr": [
                                36327.38,
                                36327.38
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c519490>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                100.0,
                                100.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                100.0,
                                100.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                100.0,
                                100.0
                            ],
                            "power": [
                                1.009094,
                                1.009094
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN
                            ]
                        }
                    ],
                    "turbine_result": null
                },
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0))]) values=[2.458919, 2.458919, 2.458919, 2.458919, 2.458919] unit=<Unit.MEGA_WATT: 'MW'>",
                    "failure_status": [
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH"
                    ],
                    "inlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            10.61314,
                            10.61314,
                            10.61314,
                            10.61314,
                            10.61314
                        ],
                        "density_kg_per_m3": [
                            16.19371,
                            16.19371,
                            16.19371,
                            16.19371,
                            16.19371
                        ],
                        "kappa": [
                            1.244485,
                            1.244485,
                            1.244485,
                            1.244485,
                            1.244485
                        ],
                        "pressure": [
                            20.0,
                            20.0,
                            20.0,
                            20.0,
                            20.0
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0
                        ],
                        "temperature_kelvin": [
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15
                        ],
                        "z": [
                            0.953971,
                            0.953971,
                            0.953971,
                            0.953971,
                            0.953971
                        ]
                    },
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0))]) values=[False, False, False, False, False] unit=<Unit.NONE: 'N/A'>",
                    "max_standard_rate": [
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN
                    ],
                    "name": "el-consumer-simple-compressor-model-with-timeslots",
                    "outlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            2.602151,
                            2.602151,
                            2.602151,
                            2.602151,
                            2.602151
                        ],
                        "density_kg_per_m3": [
                            66.04774,
                            66.04774,
                            66.04774,
                            66.04774,
                            66.04774
                        ],
                        "kappa": [
                            1.190687,
                            1.190687,
                            1.190687,
                            1.190687,
                            1.190687
                        ],
                        "pressure": [
                            93.60992,
                            93.60992,
                            93.60992,
                            93.60992,
                            93.60992
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0
                        ],
                        "temperature_kelvin": [
                            361.5373,
                            361.5373,
                            361.5373,
                            361.5373,
                            361.5373
                        ],
                        "z": [
                            0.920734,
                            0.920734,
                            0.920734,
                            0.920734,
                            0.920734
                        ]
                    },
                    "periods": {
                        "periods": [
                            {
                                "end": "2020-01-01 00:00:00",
                                "start": "2019-01-01 00:00:00"
                            },
                            {
                                "end": "2021-01-01 00:00:00",
                                "start": "2020-01-01 00:00:00"
                            },
                            {
                                "end": "2022-01-01 00:00:00",
                                "start": "2021-01-01 00:00:00"
                            },
                            {
                                "end": "2023-01-01 00:00:00",
                                "start": "2022-01-01 00:00:00"
                            },
                            {
                                "end": "2024-01-01 00:00:00",
                                "start": "2023-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0))]) values=[2.458919, 2.458919, 2.458919, 2.458919, 2.458919] unit=<Unit.MEGA_WATT: 'MW'>",
                    "rate_sm3_day": [
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0
                    ],
                    "stage_results": [
                        {
                            "asv_recirculation_loss_mw": [
                                0.445051,
                                0.445051,
                                0.445051,
                                0.445051,
                                0.445051
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE"
                            ],
                            "energy_usage": [
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c51ae50>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662
                            ],
                            "mass_rate_kg_per_hr": [
                                16193.71,
                                16193.71,
                                16193.71,
                                16193.71,
                                16193.71
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c51b390>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "power": [
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        },
                        {
                            "asv_recirculation_loss_mw": [
                                1.00432,
                                1.00432,
                                1.00432,
                                1.00432,
                                1.00432
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE"
                            ],
                            "energy_usage": [
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c528210>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662
                            ],
                            "mass_rate_kg_per_hr": [
                                36327.38,
                                36327.38,
                                36327.38,
                                36327.38,
                                36327.38
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c5287d0>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "power": [
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        }
                    ],
                    "turbine_result": null
                },
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[2.458919, 2.458919, 2.458919, 2.458919, 2.458919, 2.458919] unit=<Unit.MEGA_WATT: 'MW'>",
                    "failure_status": [
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH"
                    ],
                    "inlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            10.61314,
                            10.61314,
                            10.61314,
                            10.61314,
                            10.61314,
                            10.61314
                        ],
                        "density_kg_per_m3": [
                            16.19371,
                            16.19371,
                            16.19371,
                            16.19371,
                            16.19371,
                            16.19371
                        ],
                        "kappa": [
                            1.244485,
                            1.244485,
                            1.244485,
                            1.244485,
                            1.244485,
                            1.244485
                        ],
                        "pressure": [
                            20.0,
                            20.0,
                            20.0,
                            20.0,
                            20.0,
                            20.0
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0
                        ],
                        "temperature_kelvin": [
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15
                        ],
                        "z": [
                            0.953971,
                            0.953971,
                            0.953971,
                            0.953971,
                            0.953971,
                            0.953971
                        ]
                    },
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[False, False, False, False, False, False] unit=<Unit.NONE: 'N/A'>",
                    "max_standard_rate": [
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN
                    ],
                    "name": "el-consumer-simple-compressor-model-with-timeslots",
                    "outlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            2.602151,
                            2.602151,
                            2.602151,
                            2.602151,
                            2.602151,
                            2.602151
                        ],
                        "density_kg_per_m3": [
                            66.04774,
                            66.04774,
                            66.04774,
                            66.04774,
                            66.04774,
                            66.04774
                        ],
                        "kappa": [
                            1.190687,
                            1.190687,
                            1.190687,
                            1.190687,
                            1.190687,
                            1.190687
                        ],
                        "pressure": [
                            93.60992,
                            93.60992,
                            93.60992,
                            93.60992,
                            93.60992,
                            93.60992
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0
                        ],
                        "temperature_kelvin": [
                            361.5373,
                            361.5373,
                            361.5373,
                            361.5373,
                            361.5373,
                            361.5373
                        ],
                        "z": [
                            0.920734,
                            0.920734,
                            0.920734,
                            0.920734,
                            0.920734,
                            0.920734
                        ]
                    },
                    "periods": {
                        "periods": [
                            {
                                "end": "2025-01-01 00:00:00",
                                "start": "2024-01-01 00:00:00"
                            },
                            {
                                "end": "2026-01-01 00:00:00",
                                "start": "2025-01-01 00:00:00"
                            },
                            {
                                "end": "2027-01-01 00:00:00",
                                "start": "2026-01-01 00:00:00"
                            },
                            {
                                "end": "2028-01-01 00:00:00",
                                "start": "2027-01-01 00:00:00"
                            },
                            {
                                "end": "2029-01-01 00:00:00",
                                "start": "2028-01-01 00:00:00"
                            },
                            {
                                "end": "2030-01-01 00:00:00",
                                "start": "2029-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[2.458919, 2.458919, 2.458919, 2.458919, 2.458919, 2.458919] unit=<Unit.MEGA_WATT: 'MW'>",
                    "rate_sm3_day": [
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0
                    ],
                    "stage_results": [
                        {
                            "asv_recirculation_loss_mw": [
                                0.445051,
                                0.445051,
                                0.445051,
                                0.445051,
                                0.445051,
                                0.445051
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE"
                            ],
                            "energy_usage": [
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c52ab10>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662
                            ],
                            "mass_rate_kg_per_hr": [
                                16193.71,
                                16193.71,
                                16193.71,
                                16193.71,
                                16193.71,
                                16193.71
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c52b050>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "power": [
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        },
                        {
                            "asv_recirculation_loss_mw": [
                                1.00432,
                                1.00432,
                                1.00432,
                                1.00432,
                                1.00432,
                                1.00432
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE"
                            ],
                            "energy_usage": [
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c52bed0>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662
                            ],
                            "mass_rate_kg_per_hr": [
                                36327.38,
                                36327.38,
                                36327.38,
                                36327.38,
                                36327.38,
                                36327.38
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c52c510>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "power": [
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        }
                    ],
                    "turbine_result": null
                }
            ],
            "sub_components": []
        },
        "el-consumer1": {
            "component_result": {
                "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                "id": "el-consumer1",
                "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, False, False, False, False, False, False, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                "periods": {
                    "periods": [
                        {
                            "end": "2011-01-01 00:00:00",
                            "start": "2010-01-01 00:00:00"
                        },
                        {
                            "end": "2012-01-01 00:00:00",
                            "start": "2011-01-01 00:00:00"
                        },
                        {
                            "end": "2013-01-01 00:00:00",
                            "start": "2012-01-01 00:00:00"
                        },
                        {
                            "end": "2014-01-01 00:00:00",
                            "start": "2013-01-01 00:00:00"
                        },
                        {
                            "end": "2015-01-01 00:00:00",
                            "start": "2014-01-01 00:00:00"
                        },
                        {
                            "end": "2016-01-01 00:00:00",
                            "start": "2015-01-01 00:00:00"
                        },
                        {
                            "end": "2017-01-01 00:00:00",
                            "start": "2016-01-01 00:00:00"
                        },
                        {
                            "end": "2018-01-01 00:00:00",
                            "start": "2017-01-01 00:00:00"
                        },
                        {
                            "end": "2019-01-01 00:00:00",
                            "start": "2018-01-01 00:00:00"
                        },
                        {
                            "end": "2020-01-01 00:00:00",
                            "start": "2019-01-01 00:00:00"
                        },
                        {
                            "end": "2021-01-01 00:00:00",
                            "start": "2020-01-01 00:00:00"
                        },
                        {
                            "end": "2022-01-01 00:00:00",
                            "start": "2021-01-01 00:00:00"
                        },
                        {
                            "end": "2023-01-01 00:00:00",
                            "start": "2022-01-01 00:00:00"
                        },
                        {
                            "end": "2024-01-01 00:00:00",
                            "start": "2023-01-01 00:00:00"
                        },
                        {
                            "end": "2025-01-01 00:00:00",
                            "start": "2024-01-01 00:00:00"
                        },
                        {
                            "end": "2026-01-01 00:00:00",
                            "start": "2025-01-01 00:00:00"
                        },
                        {
                            "end": "2027-01-01 00:00:00",
                            "start": "2026-01-01 00:00:00"
                        },
                        {
                            "end": "2028-01-01 00:00:00",
                            "start": "2027-01-01 00:00:00"
                        },
                        {
                            "end": "2029-01-01 00:00:00",
                            "start": "2028-01-01 00:00:00"
                        },
                        {
                            "end": "2030-01-01 00:00:00",
                            "start": "2029-01-01 00:00:00"
                        }
                    ]
                },
                "power": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                "typ": "generc"
            },
            "models": [
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0))]) values=[5.0] unit=<Unit.MEGA_WATT: 'MW'>",
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0))]) values=[True] unit=<Unit.NONE: 'N/A'>",
                    "name": "el-consumer1",
                    "periods": {
                        "periods": [
                            {
                                "end": "2018-01-01 00:00:00",
                                "start": "2017-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0))]) values=[5.0] unit=<Unit.MEGA_WATT: 'MW'>"
                },
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0))]) values=[2.458919, 2.458919, 2.458919, 2.458919, 2.458919, 2.458919] unit=<Unit.MEGA_WATT: 'MW'>",
                    "failure_status": [
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH",
                        "TARGET_DISCHARGE_PRESSURE_TOO_HIGH"
                    ],
                    "inlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            10.61314,
                            10.61314,
                            10.61314,
                            10.61314,
                            10.61314,
                            10.61314
                        ],
                        "density_kg_per_m3": [
                            16.19371,
                            16.19371,
                            16.19371,
                            16.19371,
                            16.19371,
                            16.19371
                        ],
                        "kappa": [
                            1.244485,
                            1.244485,
                            1.244485,
                            1.244485,
                            1.244485,
                            1.244485
                        ],
                        "pressure": [
                            20.0,
                            20.0,
                            20.0,
                            20.0,
                            20.0,
                            20.0
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0
                        ],
                        "temperature_kelvin": [
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15
                        ],
                        "z": [
                            0.953971,
                            0.953971,
                            0.953971,
                            0.953971,
                            0.953971,
                            0.953971
                        ]
                    },
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0))]) values=[False, False, False, False, False, False] unit=<Unit.NONE: 'N/A'>",
                    "max_standard_rate": [
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN
                    ],
                    "name": "el-consumer1",
                    "outlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            2.602151,
                            2.602151,
                            2.602151,
                            2.602151,
                            2.602151,
                            2.602151
                        ],
                        "density_kg_per_m3": [
                            66.04774,
                            66.04774,
                            66.04774,
                            66.04774,
                            66.04774,
                            66.04774
                        ],
                        "kappa": [
                            1.190687,
                            1.190687,
                            1.190687,
                            1.190687,
                            1.190687,
                            1.190687
                        ],
                        "pressure": [
                            93.60992,
                            93.60992,
                            93.60992,
                            93.60992,
                            93.60992,
                            93.60992
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0
                        ],
                        "temperature_kelvin": [
                            361.5373,
                            361.5373,
                            361.5373,
                            361.5373,
                            361.5373,
                            361.5373
                        ],
                        "z": [
                            0.920734,
                            0.920734,
                            0.920734,
                            0.920734,
                            0.920734,
                            0.920734
                        ]
                    },
                    "periods": {
                        "periods": [
                            {
                                "end": "2019-01-01 00:00:00",
                                "start": "2018-01-01 00:00:00"
                            },
                            {
                                "end": "2020-01-01 00:00:00",
                                "start": "2019-01-01 00:00:00"
                            },
                            {
                                "end": "2021-01-01 00:00:00",
                                "start": "2020-01-01 00:00:00"
                            },
                            {
                                "end": "2022-01-01 00:00:00",
                                "start": "2021-01-01 00:00:00"
                            },
                            {
                                "end": "2023-01-01 00:00:00",
                                "start": "2022-01-01 00:00:00"
                            },
                            {
                                "end": "2024-01-01 00:00:00",
                                "start": "2023-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0))]) values=[2.458919, 2.458919, 2.458919, 2.458919, 2.458919, 2.458919] unit=<Unit.MEGA_WATT: 'MW'>",
                    "rate_sm3_day": [
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0
                    ],
                    "stage_results": [
                        {
                            "asv_recirculation_loss_mw": [
                                0.445051,
                                0.445051,
                                0.445051,
                                0.445051,
                                0.445051,
                                0.445051
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE"
                            ],
                            "energy_usage": [
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c542850>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662
                            ],
                            "mass_rate_kg_per_hr": [
                                16193.71,
                                16193.71,
                                16193.71,
                                16193.71,
                                16193.71,
                                16193.71
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c542d90>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "power": [
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825,
                                0.449825
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        },
                        {
                            "asv_recirculation_loss_mw": [
                                1.00432,
                                1.00432,
                                1.00432,
                                1.00432,
                                1.00432,
                                1.00432
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE"
                            ],
                            "energy_usage": [
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c543c50>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662
                            ],
                            "mass_rate_kg_per_hr": [
                                36327.38,
                                36327.38,
                                36327.38,
                                36327.38,
                                36327.38,
                                36327.38
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c550210>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "power": [
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094,
                                1.009094
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        }
                    ],
                    "turbine_result": null
                },
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                    "name": "el-consumer1",
                    "periods": {
                        "periods": [
                            {
                                "end": "2025-01-01 00:00:00",
                                "start": "2024-01-01 00:00:00"
                            },
                            {
                                "end": "2026-01-01 00:00:00",
                                "start": "2025-01-01 00:00:00"
                            },
                            {
                                "end": "2027-01-01 00:00:00",
                                "start": "2026-01-01 00:00:00"
                            },
                            {
                                "end": "2028-01-01 00:00:00",
                                "start": "2027-01-01 00:00:00"
                            },
                            {
                                "end": "2029-01-01 00:00:00",
                                "start": "2028-01-01 00:00:00"
                            },
                            {
                                "end": "2030-01-01 00:00:00",
                                "start": "2029-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>"
                }
            ],
            "sub_components": []
        },
        "el-consumer2": {
            "component_result": {
                "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 10.0, 10.0, 10.0, 10.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                "id": "el-consumer2",
                "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                "periods": {
                    "periods": [
                        {
                            "end": "2011-01-01 00:00:00",
                            "start": "2010-01-01 00:00:00"
                        },
                        {
                            "end": "2012-01-01 00:00:00",
                            "start": "2011-01-01 00:00:00"
                        },
                        {
                            "end": "2013-01-01 00:00:00",
                            "start": "2012-01-01 00:00:00"
                        },
                        {
                            "end": "2014-01-01 00:00:00",
                            "start": "2013-01-01 00:00:00"
                        },
                        {
                            "end": "2015-01-01 00:00:00",
                            "start": "2014-01-01 00:00:00"
                        },
                        {
                            "end": "2016-01-01 00:00:00",
                            "start": "2015-01-01 00:00:00"
                        },
                        {
                            "end": "2017-01-01 00:00:00",
                            "start": "2016-01-01 00:00:00"
                        },
                        {
                            "end": "2018-01-01 00:00:00",
                            "start": "2017-01-01 00:00:00"
                        },
                        {
                            "end": "2019-01-01 00:00:00",
                            "start": "2018-01-01 00:00:00"
                        },
                        {
                            "end": "2020-01-01 00:00:00",
                            "start": "2019-01-01 00:00:00"
                        },
                        {
                            "end": "2021-01-01 00:00:00",
                            "start": "2020-01-01 00:00:00"
                        },
                        {
                            "end": "2022-01-01 00:00:00",
                            "start": "2021-01-01 00:00:00"
                        },
                        {
                            "end": "2023-01-01 00:00:00",
                            "start": "2022-01-01 00:00:00"
                        },
                        {
                            "end": "2024-01-01 00:00:00",
                            "start": "2023-01-01 00:00:00"
                        },
                        {
                            "end": "2025-01-01 00:00:00",
                            "start": "2024-01-01 00:00:00"
                        },
                        {
                            "end": "2026-01-01 00:00:00",
                            "start": "2025-01-01 00:00:00"
                        },
                        {
                            "end": "2027-01-01 00:00:00",
                            "start": "2026-01-01 00:00:00"
                        },
                        {
                            "end": "2028-01-01 00:00:00",
                            "start": "2027-01-01 00:00:00"
                        },
                        {
                            "end": "2029-01-01 00:00:00",
                            "start": "2028-01-01 00:00:00"
                        },
                        {
                            "end": "2030-01-01 00:00:00",
                            "start": "2029-01-01 00:00:00"
                        }
                    ]
                },
                "power": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 10.0, 10.0, 10.0, 10.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                "typ": "generc"
            },
            "models": [
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[5.0, 5.0] unit=<Unit.MEGA_WATT: 'MW'>",
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[True, True] unit=<Unit.NONE: 'N/A'>",
                    "name": "el-consumer2",
                    "periods": {
                        "periods": [
                            {
                                "end": "2018-01-01 00:00:00",
                                "start": "2017-01-01 00:00:00"
                            },
                            {
                                "end": "2019-01-01 00:00:00",
                                "start": "2018-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[5.0, 5.0] unit=<Unit.MEGA_WATT: 'MW'>"
                },
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0))]) values=[10.0, 10.0, 10.0, 10.0, 10.0] unit=<Unit.MEGA_WATT: 'MW'>",
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0))]) values=[True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                    "name": "el-consumer2",
                    "periods": {
                        "periods": [
                            {
                                "end": "2020-01-01 00:00:00",
                                "start": "2019-01-01 00:00:00"
                            },
                            {
                                "end": "2021-01-01 00:00:00",
                                "start": "2020-01-01 00:00:00"
                            },
                            {
                                "end": "2022-01-01 00:00:00",
                                "start": "2021-01-01 00:00:00"
                            },
                            {
                                "end": "2023-01-01 00:00:00",
                                "start": "2022-01-01 00:00:00"
                            },
                            {
                                "end": "2024-01-01 00:00:00",
                                "start": "2023-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0))]) values=[10.0, 10.0, 10.0, 10.0, 10.0] unit=<Unit.MEGA_WATT: 'MW'>"
                },
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                    "name": "el-consumer2",
                    "periods": {
                        "periods": [
                            {
                                "end": "2025-01-01 00:00:00",
                                "start": "2024-01-01 00:00:00"
                            },
                            {
                                "end": "2026-01-01 00:00:00",
                                "start": "2025-01-01 00:00:00"
                            },
                            {
                                "end": "2027-01-01 00:00:00",
                                "start": "2026-01-01 00:00:00"
                            },
                            {
                                "end": "2028-01-01 00:00:00",
                                "start": "2027-01-01 00:00:00"
                            },
                            {
                                "end": "2029-01-01 00:00:00",
                                "start": "2028-01-01 00:00:00"
                            },
                            {
                                "end": "2030-01-01 00:00:00",
                                "start": "2029-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>"
                }
            ],
            "sub_components": []
        },
        "el-consumer3": {
            "component_result": {
                "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                "id": "el-consumer3",
                "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                "periods": {
                    "periods": [
                        {
                            "end": "2011-01-01 00:00:00",
                            "start": "2010-01-01 00:00:00"
                        },
                        {
                            "end": "2012-01-01 00:00:00",
                            "start": "2011-01-01 00:00:00"
                        },
                        {
                            "end": "2013-01-01 00:00:00",
                            "start": "2012-01-01 00:00:00"
                        },
                        {
                            "end": "2014-01-01 00:00:00",
                            "start": "2013-01-01 00:00:00"
                        },
                        {
                            "end": "2015-01-01 00:00:00",
                            "start": "2014-01-01 00:00:00"
                        },
                        {
                            "end": "2016-01-01 00:00:00",
                            "start": "2015-01-01 00:00:00"
                        },
                        {
                            "end": "2017-01-01 00:00:00",
                            "start": "2016-01-01 00:00:00"
                        },
                        {
                            "end": "2018-01-01 00:00:00",
                            "start": "2017-01-01 00:00:00"
                        },
                        {
                            "end": "2019-01-01 00:00:00",
                            "start": "2018-01-01 00:00:00"
                        },
                        {
                            "end": "2020-01-01 00:00:00",
                            "start": "2019-01-01 00:00:00"
                        },
                        {
                            "end": "2021-01-01 00:00:00",
                            "start": "2020-01-01 00:00:00"
                        },
                        {
                            "end": "2022-01-01 00:00:00",
                            "start": "2021-01-01 00:00:00"
                        },
                        {
                            "end": "2023-01-01 00:00:00",
                            "start": "2022-01-01 00:00:00"
                        },
                        {
                            "end": "2024-01-01 00:00:00",
                            "start": "2023-01-01 00:00:00"
                        },
                        {
                            "end": "2025-01-01 00:00:00",
                            "start": "2024-01-01 00:00:00"
                        },
                        {
                            "end": "2026-01-01 00:00:00",
                            "start": "2025-01-01 00:00:00"
                        },
                        {
                            "end": "2027-01-01 00:00:00",
                            "start": "2026-01-01 00:00:00"
                        },
                        {
                            "end": "2028-01-01 00:00:00",
                            "start": "2027-01-01 00:00:00"
                        },
                        {
                            "end": "2029-01-01 00:00:00",
                            "start": "2028-01-01 00:00:00"
                        },
                        {
                            "end": "2030-01-01 00:00:00",
                            "start": "2029-01-01 00:00:00"
                        }
                    ]
                },
                "power": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                "typ": "generc"
            },
            "models": [],
            "sub_components": []
        },
        "el-consumer4": {
            "component_result": {
                "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 10.0, 10.0, 10.0, 10.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                "id": "el-consumer4",
                "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                "periods": {
                    "periods": [
                        {
                            "end": "2011-01-01 00:00:00",
                            "start": "2010-01-01 00:00:00"
                        },
                        {
                            "end": "2012-01-01 00:00:00",
                            "start": "2011-01-01 00:00:00"
                        },
                        {
                            "end": "2013-01-01 00:00:00",
                            "start": "2012-01-01 00:00:00"
                        },
                        {
                            "end": "2014-01-01 00:00:00",
                            "start": "2013-01-01 00:00:00"
                        },
                        {
                            "end": "2015-01-01 00:00:00",
                            "start": "2014-01-01 00:00:00"
                        },
                        {
                            "end": "2016-01-01 00:00:00",
                            "start": "2015-01-01 00:00:00"
                        },
                        {
                            "end": "2017-01-01 00:00:00",
                            "start": "2016-01-01 00:00:00"
                        },
                        {
                            "end": "2018-01-01 00:00:00",
                            "start": "2017-01-01 00:00:00"
                        },
                        {
                            "end": "2019-01-01 00:00:00",
                            "start": "2018-01-01 00:00:00"
                        },
                        {
                            "end": "2020-01-01 00:00:00",
                            "start": "2019-01-01 00:00:00"
                        },
                        {
                            "end": "2021-01-01 00:00:00",
                            "start": "2020-01-01 00:00:00"
                        },
                        {
                            "end": "2022-01-01 00:00:00",
                            "start": "2021-01-01 00:00:00"
                        },
                        {
                            "end": "2023-01-01 00:00:00",
                            "start": "2022-01-01 00:00:00"
                        },
                        {
                            "end": "2024-01-01 00:00:00",
                            "start": "2023-01-01 00:00:00"
                        },
                        {
                            "end": "2025-01-01 00:00:00",
                            "start": "2024-01-01 00:00:00"
                        },
                        {
                            "end": "2026-01-01 00:00:00",
                            "start": "2025-01-01 00:00:00"
                        },
                        {
                            "end": "2027-01-01 00:00:00",
                            "start": "2026-01-01 00:00:00"
                        },
                        {
                            "end": "2028-01-01 00:00:00",
                            "start": "2027-01-01 00:00:00"
                        },
                        {
                            "end": "2029-01-01 00:00:00",
                            "start": "2028-01-01 00:00:00"
                        },
                        {
                            "end": "2030-01-01 00:00:00",
                            "start": "2029-01-01 00:00:00"
                        }
                    ]
                },
                "power": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 10.0, 10.0, 10.0, 10.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                "typ": "generc"
            },
            "models": [
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[5.0, 5.0] unit=<Unit.MEGA_WATT: 'MW'>",
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[True, True] unit=<Unit.NONE: 'N/A'>",
                    "name": "el-consumer4",
                    "periods": {
                        "periods": [
                            {
                                "end": "2018-01-01 00:00:00",
                                "start": "2017-01-01 00:00:00"
                            },
                            {
                                "end": "2019-01-01 00:00:00",
                                "start": "2018-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[5.0, 5.0] unit=<Unit.MEGA_WATT: 'MW'>"
                },
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0))]) values=[10.0, 10.0, 10.0, 10.0, 10.0] unit=<Unit.MEGA_WATT: 'MW'>",
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0))]) values=[True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                    "name": "el-consumer4",
                    "periods": {
                        "periods": [
                            {
                                "end": "2020-01-01 00:00:00",
                                "start": "2019-01-01 00:00:00"
                            },
                            {
                                "end": "2021-01-01 00:00:00",
                                "start": "2020-01-01 00:00:00"
                            },
                            {
                                "end": "2022-01-01 00:00:00",
                                "start": "2021-01-01 00:00:00"
                            },
                            {
                                "end": "2023-01-01 00:00:00",
                                "start": "2022-01-01 00:00:00"
                            },
                            {
                                "end": "2024-01-01 00:00:00",
                                "start": "2023-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0))]) values=[10.0, 10.0, 10.0, 10.0, 10.0] unit=<Unit.MEGA_WATT: 'MW'>"
                },
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                    "name": "el-consumer4",
                    "periods": {
                        "periods": [
                            {
                                "end": "2025-01-01 00:00:00",
                                "start": "2024-01-01 00:00:00"
                            },
                            {
                                "end": "2026-01-01 00:00:00",
                                "start": "2025-01-01 00:00:00"
                            },
                            {
                                "end": "2027-01-01 00:00:00",
                                "start": "2026-01-01 00:00:00"
                            },
                            {
                                "end": "2028-01-01 00:00:00",
                                "start": "2027-01-01 00:00:00"
                            },
                            {
                                "end": "2029-01-01 00:00:00",
                                "start": "2028-01-01 00:00:00"
                            },
                            {
                                "end": "2030-01-01 00:00:00",
                                "start": "2029-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>"
                }
            ],
            "sub_components": []
        },
        "fuel_consumer_with_time_slots": {
            "component_result": {
                "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999] unit=<Unit.STANDARD_CUBIC_METER_PER_DAY: 'Sm3/d'>",
                "id": "fuel_consumer_with_time_slots",
                "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                "periods": {
                    "periods": [
                        {
                            "end": "2011-01-01 00:00:00",
                            "start": "2010-01-01 00:00:00"
                        },
                        {
                            "end": "2012-01-01 00:00:00",
                            "start": "2011-01-01 00:00:00"
                        },
                        {
                            "end": "2013-01-01 00:00:00",
                            "start": "2012-01-01 00:00:00"
                        },
                        {
                            "end": "2014-01-01 00:00:00",
                            "start": "2013-01-01 00:00:00"
                        },
                        {
                            "end": "2015-01-01 00:00:00",
                            "start": "2014-01-01 00:00:00"
                        },
                        {
                            "end": "2016-01-01 00:00:00",
                            "start": "2015-01-01 00:00:00"
                        },
                        {
                            "end": "2017-01-01 00:00:00",
                            "start": "2016-01-01 00:00:00"
                        },
                        {
                            "end": "2018-01-01 00:00:00",
                            "start": "2017-01-01 00:00:00"
                        },
                        {
                            "end": "2019-01-01 00:00:00",
                            "start": "2018-01-01 00:00:00"
                        },
                        {
                            "end": "2020-01-01 00:00:00",
                            "start": "2019-01-01 00:00:00"
                        },
                        {
                            "end": "2021-01-01 00:00:00",
                            "start": "2020-01-01 00:00:00"
                        },
                        {
                            "end": "2022-01-01 00:00:00",
                            "start": "2021-01-01 00:00:00"
                        },
                        {
                            "end": "2023-01-01 00:00:00",
                            "start": "2022-01-01 00:00:00"
                        },
                        {
                            "end": "2024-01-01 00:00:00",
                            "start": "2023-01-01 00:00:00"
                        },
                        {
                            "end": "2025-01-01 00:00:00",
                            "start": "2024-01-01 00:00:00"
                        },
                        {
                            "end": "2026-01-01 00:00:00",
                            "start": "2025-01-01 00:00:00"
                        },
                        {
                            "end": "2027-01-01 00:00:00",
                            "start": "2026-01-01 00:00:00"
                        },
                        {
                            "end": "2028-01-01 00:00:00",
                            "start": "2027-01-01 00:00:00"
                        },
                        {
                            "end": "2029-01-01 00:00:00",
                            "start": "2028-01-01 00:00:00"
                        },
                        {
                            "end": "2030-01-01 00:00:00",
                            "start": "2029-01-01 00:00:00"
                        }
                    ]
                },
                "power": null,
                "typ": "generc"
            },
            "models": [
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999] unit=<Unit.STANDARD_CUBIC_METER_PER_DAY: 'Sm3/d'>",
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                    "name": "fuel_consumer_with_time_slots",
                    "periods": {
                        "periods": [
                            {
                                "end": "2011-01-01 00:00:00",
                                "start": "2010-01-01 00:00:00"
                            },
                            {
                                "end": "2012-01-01 00:00:00",
                                "start": "2011-01-01 00:00:00"
                            },
                            {
                                "end": "2013-01-01 00:00:00",
                                "start": "2012-01-01 00:00:00"
                            },
                            {
                                "end": "2014-01-01 00:00:00",
                                "start": "2013-01-01 00:00:00"
                            },
                            {
                                "end": "2015-01-01 00:00:00",
                                "start": "2014-01-01 00:00:00"
                            },
                            {
                                "end": "2016-01-01 00:00:00",
                                "start": "2015-01-01 00:00:00"
                            },
                            {
                                "end": "2017-01-01 00:00:00",
                                "start": "2016-01-01 00:00:00"
                            },
                            {
                                "end": "2018-01-01 00:00:00",
                                "start": "2017-01-01 00:00:00"
                            },
                            {
                                "end": "2019-01-01 00:00:00",
                                "start": "2018-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": null
                },
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999, 4.4999] unit=<Unit.STANDARD_CUBIC_METER_PER_DAY: 'Sm3/d'>",
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                    "name": "fuel_consumer_with_time_slots",
                    "periods": {
                        "periods": [
                            {
                                "end": "2020-01-01 00:00:00",
                                "start": "2019-01-01 00:00:00"
                            },
                            {
                                "end": "2021-01-01 00:00:00",
                                "start": "2020-01-01 00:00:00"
                            },
                            {
                                "end": "2022-01-01 00:00:00",
                                "start": "2021-01-01 00:00:00"
                            },
                            {
                                "end": "2023-01-01 00:00:00",
                                "start": "2022-01-01 00:00:00"
                            },
                            {
                                "end": "2024-01-01 00:00:00",
                                "start": "2023-01-01 00:00:00"
                            },
                            {
                                "end": "2025-01-01 00:00:00",
                                "start": "2024-01-01 00:00:00"
                            },
                            {
                                "end": "2026-01-01 00:00:00",
                                "start": "2025-01-01 00:00:00"
                            },
                            {
                                "end": "2027-01-01 00:00:00",
                                "start": "2026-01-01 00:00:00"
                            },
                            {
                                "end": "2028-01-01 00:00:00",
                                "start": "2027-01-01 00:00:00"
                            },
                            {
                                "end": "2029-01-01 00:00:00",
                                "start": "2028-01-01 00:00:00"
                            },
                            {
                                "end": "2030-01-01 00:00:00",
                                "start": "2029-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": null
                }
            ],
            "sub_components": []
        },
        "simplified_compressor_system": {
            "component_result": {
                "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055] unit=<Unit.MEGA_WATT: 'MW'>",
                "id": "simplified_compressor_system",
                "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                "operational_settings_results": {
                    "1": [
                        "<libecalc.core.result.results.CompressorModelResult object at 0x10c475b10>",
                        "<libecalc.core.result.results.CompressorModelResult object at 0x10c4d4b10>",
                        "<libecalc.core.result.results.CompressorModelResult object at 0x10c4d5690>",
                        "<libecalc.core.result.results.CompressorModelResult object at 0x10c4edf10>"
                    ],
                    "2": [
                        "<libecalc.core.result.results.CompressorModelResult object at 0x10c4eff90>",
                        "<libecalc.core.result.results.CompressorModelResult object at 0x10c4ba810>",
                        "<libecalc.core.result.results.CompressorModelResult object at 0x10c49cd50>",
                        "<libecalc.core.result.results.CompressorModelResult object at 0x10c49ef50>"
                    ]
                },
                "operational_settings_used": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] unit=<Unit.NONE: 'N/A'>",
                "periods": {
                    "periods": [
                        {
                            "end": "2011-01-01 00:00:00",
                            "start": "2010-01-01 00:00:00"
                        },
                        {
                            "end": "2012-01-01 00:00:00",
                            "start": "2011-01-01 00:00:00"
                        },
                        {
                            "end": "2013-01-01 00:00:00",
                            "start": "2012-01-01 00:00:00"
                        },
                        {
                            "end": "2014-01-01 00:00:00",
                            "start": "2013-01-01 00:00:00"
                        },
                        {
                            "end": "2015-01-01 00:00:00",
                            "start": "2014-01-01 00:00:00"
                        },
                        {
                            "end": "2016-01-01 00:00:00",
                            "start": "2015-01-01 00:00:00"
                        },
                        {
                            "end": "2017-01-01 00:00:00",
                            "start": "2016-01-01 00:00:00"
                        },
                        {
                            "end": "2018-01-01 00:00:00",
                            "start": "2017-01-01 00:00:00"
                        },
                        {
                            "end": "2019-01-01 00:00:00",
                            "start": "2018-01-01 00:00:00"
                        },
                        {
                            "end": "2020-01-01 00:00:00",
                            "start": "2019-01-01 00:00:00"
                        },
                        {
                            "end": "2021-01-01 00:00:00",
                            "start": "2020-01-01 00:00:00"
                        },
                        {
                            "end": "2022-01-01 00:00:00",
                            "start": "2021-01-01 00:00:00"
                        },
                        {
                            "end": "2023-01-01 00:00:00",
                            "start": "2022-01-01 00:00:00"
                        },
                        {
                            "end": "2024-01-01 00:00:00",
                            "start": "2023-01-01 00:00:00"
                        },
                        {
                            "end": "2025-01-01 00:00:00",
                            "start": "2024-01-01 00:00:00"
                        },
                        {
                            "end": "2026-01-01 00:00:00",
                            "start": "2025-01-01 00:00:00"
                        },
                        {
                            "end": "2027-01-01 00:00:00",
                            "start": "2026-01-01 00:00:00"
                        },
                        {
                            "end": "2028-01-01 00:00:00",
                            "start": "2027-01-01 00:00:00"
                        },
                        {
                            "end": "2029-01-01 00:00:00",
                            "start": "2028-01-01 00:00:00"
                        },
                        {
                            "end": "2030-01-01 00:00:00",
                            "start": "2029-01-01 00:00:00"
                        }
                    ]
                },
                "power": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055] unit=<Unit.MEGA_WATT: 'MW'>",
                "typ": "system"
            },
            "models": [
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055] unit=<Unit.MEGA_WATT: 'MW'>",
                    "failure_status": [
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE"
                    ],
                    "inlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037
                        ],
                        "density_kg_per_m3": [
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189
                        ],
                        "kappa": [
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351
                        ],
                        "pressure": [
                            41.0,
                            41.0,
                            41.0,
                            41.0,
                            41.0,
                            41.0,
                            41.0,
                            41.0,
                            41.0
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0
                        ],
                        "temperature_kelvin": [
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15
                        ],
                        "z": [
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628
                        ]
                    },
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                    "max_standard_rate": [
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN
                    ],
                    "name": "train1",
                    "outlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162
                        ],
                        "density_kg_per_m3": [
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473
                        ],
                        "kappa": [
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421
                        ],
                        "pressure": [
                            200.0,
                            200.0,
                            200.0,
                            200.0,
                            200.0,
                            200.0,
                            200.0,
                            200.0,
                            200.0
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0
                        ],
                        "temperature_kelvin": [
                            364.171,
                            364.171,
                            364.171,
                            364.171,
                            364.171,
                            364.171,
                            364.171,
                            364.171,
                            364.171
                        ],
                        "z": [
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853
                        ]
                    },
                    "periods": {
                        "periods": [
                            {
                                "end": "2011-01-01 00:00:00",
                                "start": "2010-01-01 00:00:00"
                            },
                            {
                                "end": "2012-01-01 00:00:00",
                                "start": "2011-01-01 00:00:00"
                            },
                            {
                                "end": "2013-01-01 00:00:00",
                                "start": "2012-01-01 00:00:00"
                            },
                            {
                                "end": "2014-01-01 00:00:00",
                                "start": "2013-01-01 00:00:00"
                            },
                            {
                                "end": "2015-01-01 00:00:00",
                                "start": "2014-01-01 00:00:00"
                            },
                            {
                                "end": "2016-01-01 00:00:00",
                                "start": "2015-01-01 00:00:00"
                            },
                            {
                                "end": "2017-01-01 00:00:00",
                                "start": "2016-01-01 00:00:00"
                            },
                            {
                                "end": "2018-01-01 00:00:00",
                                "start": "2017-01-01 00:00:00"
                            },
                            {
                                "end": "2019-01-01 00:00:00",
                                "start": "2018-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055] unit=<Unit.MEGA_WATT: 'MW'>",
                    "rate_sm3_day": [
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0
                    ],
                    "stage_results": [
                        {
                            "asv_recirculation_loss_mw": [
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE"
                            ],
                            "energy_usage": [
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4d19d0>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662
                            ],
                            "mass_rate_kg_per_hr": [
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4d1cd0>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "power": [
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        },
                        {
                            "asv_recirculation_loss_mw": [
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE"
                            ],
                            "energy_usage": [
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4d25d0>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662
                            ],
                            "mass_rate_kg_per_hr": [
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4d28d0>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "power": [
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        }
                    ],
                    "turbine_result": null
                },
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                    "failure_status": [
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE"
                    ],
                    "inlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "density_kg_per_m3": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "kappa": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "pressure": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "temperature_kelvin": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "z": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ]
                    },
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                    "max_standard_rate": [
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN
                    ],
                    "name": "train2",
                    "outlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "density_kg_per_m3": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "kappa": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "pressure": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "temperature_kelvin": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "z": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ]
                    },
                    "periods": {
                        "periods": [
                            {
                                "end": "2011-01-01 00:00:00",
                                "start": "2010-01-01 00:00:00"
                            },
                            {
                                "end": "2012-01-01 00:00:00",
                                "start": "2011-01-01 00:00:00"
                            },
                            {
                                "end": "2013-01-01 00:00:00",
                                "start": "2012-01-01 00:00:00"
                            },
                            {
                                "end": "2014-01-01 00:00:00",
                                "start": "2013-01-01 00:00:00"
                            },
                            {
                                "end": "2015-01-01 00:00:00",
                                "start": "2014-01-01 00:00:00"
                            },
                            {
                                "end": "2016-01-01 00:00:00",
                                "start": "2015-01-01 00:00:00"
                            },
                            {
                                "end": "2017-01-01 00:00:00",
                                "start": "2016-01-01 00:00:00"
                            },
                            {
                                "end": "2018-01-01 00:00:00",
                                "start": "2017-01-01 00:00:00"
                            },
                            {
                                "end": "2019-01-01 00:00:00",
                                "start": "2018-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                    "rate_sm3_day": [
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0
                    ],
                    "stage_results": [
                        {
                            "asv_recirculation_loss_mw": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED"
                            ],
                            "energy_usage": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4d3a50>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "mass_rate_kg_per_hr": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4d3d50>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "power": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        },
                        {
                            "asv_recirculation_loss_mw": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED"
                            ],
                            "energy_usage": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4fc590>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "mass_rate_kg_per_hr": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4fc890>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "power": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        }
                    ],
                    "turbine_result": null
                },
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055] unit=<Unit.MEGA_WATT: 'MW'>",
                    "failure_status": [
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE"
                    ],
                    "inlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037,
                            4.920037
                        ],
                        "density_kg_per_m3": [
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189,
                            34.93189
                        ],
                        "kappa": [
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351,
                            1.221351
                        ],
                        "pressure": [
                            41.0,
                            41.0,
                            41.0,
                            41.0,
                            41.0,
                            41.0,
                            41.0,
                            41.0,
                            41.0,
                            41.0,
                            41.0
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0
                        ],
                        "temperature_kelvin": [
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15,
                            303.15
                        ],
                        "z": [
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628,
                            0.907628
                        ]
                    },
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                    "max_standard_rate": [
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN
                    ],
                    "name": "train1_upgrade",
                    "outlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162,
                            1.186162
                        ],
                        "density_kg_per_m3": [
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473,
                            140.2473
                        ],
                        "kappa": [
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421,
                            1.163421
                        ],
                        "pressure": [
                            200.0,
                            200.0,
                            200.0,
                            200.0,
                            200.0,
                            200.0,
                            200.0,
                            200.0,
                            200.0,
                            200.0,
                            200.0
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0,
                            5000.0
                        ],
                        "temperature_kelvin": [
                            364.171,
                            364.171,
                            364.171,
                            364.171,
                            364.171,
                            364.171,
                            364.171,
                            364.171,
                            364.171,
                            364.171,
                            364.171
                        ],
                        "z": [
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853,
                            0.923853
                        ]
                    },
                    "periods": {
                        "periods": [
                            {
                                "end": "2020-01-01 00:00:00",
                                "start": "2019-01-01 00:00:00"
                            },
                            {
                                "end": "2021-01-01 00:00:00",
                                "start": "2020-01-01 00:00:00"
                            },
                            {
                                "end": "2022-01-01 00:00:00",
                                "start": "2021-01-01 00:00:00"
                            },
                            {
                                "end": "2023-01-01 00:00:00",
                                "start": "2022-01-01 00:00:00"
                            },
                            {
                                "end": "2024-01-01 00:00:00",
                                "start": "2023-01-01 00:00:00"
                            },
                            {
                                "end": "2025-01-01 00:00:00",
                                "start": "2024-01-01 00:00:00"
                            },
                            {
                                "end": "2026-01-01 00:00:00",
                                "start": "2025-01-01 00:00:00"
                            },
                            {
                                "end": "2027-01-01 00:00:00",
                                "start": "2026-01-01 00:00:00"
                            },
                            {
                                "end": "2028-01-01 00:00:00",
                                "start": "2027-01-01 00:00:00"
                            },
                            {
                                "end": "2029-01-01 00:00:00",
                                "start": "2028-01-01 00:00:00"
                            },
                            {
                                "end": "2030-01-01 00:00:00",
                                "start": "2029-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055] unit=<Unit.MEGA_WATT: 'MW'>",
                    "rate_sm3_day": [
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0,
                        5000.0
                    ],
                    "stage_results": [
                        {
                            "asv_recirculation_loss_mw": [
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556,
                                0.965556
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE"
                            ],
                            "energy_usage": [
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4fdad0>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662
                            ],
                            "mass_rate_kg_per_hr": [
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89,
                                34931.89
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4fde50>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "power": [
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033,
                                0.97033
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        },
                        {
                            "asv_recirculation_loss_mw": [
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995,
                                2.36995
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE",
                                "BELOW_MINIMUM_FLOW_RATE"
                            ],
                            "energy_usage": [
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4fe690>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662,
                                171.8662
                            ],
                            "mass_rate_kg_per_hr": [
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08,
                                85490.08
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4fea10>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0,
                                100.0
                            ],
                            "power": [
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724,
                                2.374724
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        }
                    ],
                    "turbine_result": null
                },
                {
                    "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                    "failure_status": [
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE",
                        "NO_FAILURE"
                    ],
                    "inlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "density_kg_per_m3": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "kappa": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "pressure": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "temperature_kelvin": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "z": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ]
                    },
                    "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                    "max_standard_rate": [
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        NaN
                    ],
                    "name": "train2_upgrade",
                    "outlet_stream_condition": {
                        "actual_rate_before_asv_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "actual_rate_m3_per_hr": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "density_kg_per_m3": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "kappa": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "pressure": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_before_asv_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "standard_rate_sm3_per_day": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "temperature_kelvin": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ],
                        "z": [
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN,
                            NaN
                        ]
                    },
                    "periods": {
                        "periods": [
                            {
                                "end": "2020-01-01 00:00:00",
                                "start": "2019-01-01 00:00:00"
                            },
                            {
                                "end": "2021-01-01 00:00:00",
                                "start": "2020-01-01 00:00:00"
                            },
                            {
                                "end": "2022-01-01 00:00:00",
                                "start": "2021-01-01 00:00:00"
                            },
                            {
                                "end": "2023-01-01 00:00:00",
                                "start": "2022-01-01 00:00:00"
                            },
                            {
                                "end": "2024-01-01 00:00:00",
                                "start": "2023-01-01 00:00:00"
                            },
                            {
                                "end": "2025-01-01 00:00:00",
                                "start": "2024-01-01 00:00:00"
                            },
                            {
                                "end": "2026-01-01 00:00:00",
                                "start": "2025-01-01 00:00:00"
                            },
                            {
                                "end": "2027-01-01 00:00:00",
                                "start": "2026-01-01 00:00:00"
                            },
                            {
                                "end": "2028-01-01 00:00:00",
                                "start": "2027-01-01 00:00:00"
                            },
                            {
                                "end": "2029-01-01 00:00:00",
                                "start": "2028-01-01 00:00:00"
                            },
                            {
                                "end": "2030-01-01 00:00:00",
                                "start": "2029-01-01 00:00:00"
                            }
                        ]
                    },
                    "power": "periods=Periods(periods=[Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                    "rate_sm3_day": [
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0
                    ],
                    "stage_results": [
                        {
                            "asv_recirculation_loss_mw": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED"
                            ],
                            "energy_usage": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4ffc50>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "mass_rate_kg_per_hr": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4fff50>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "power": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        },
                        {
                            "asv_recirculation_loss_mw": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "chart": "speed_rpm=1.0 rate_actual_m3_hour=[1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 9000.0, 10000.0] polytropic_head_joule_per_kg=[100000.0, 90000.0, 80000.0, 70000.0, 60000.0, 50000.0, 40000.0, 30000.0, 20000.0, 10000.0] efficiency_fraction=[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1] typ=<ChartType.SINGLE_SPEED: 'SINGLE_SPEED_CHART'>",
                            "chart_area_flags": [
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED",
                                "NOT_CALCULATED"
                            ],
                            "energy_usage": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "energy_usage_unit": "MW",
                            "fluid_composition": {},
                            "head_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "inlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4e8790>",
                            "is_valid": [
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true,
                                true
                            ],
                            "mass_rate_before_asv_kg_per_hr": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "mass_rate_kg_per_hr": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "outlet_stream_condition": "<libecalc.domain.process.core.results.compressor.CompressorStreamCondition object at 0x10c4e8a90>",
                            "polytropic_efficiency": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                            ],
                            "polytropic_enthalpy_change_before_choke_kJ_per_kg": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "polytropic_enthalpy_change_kJ_per_kg": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "polytropic_head_kJ_per_kg": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "power": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                            ],
                            "power_unit": "MW",
                            "pressure_is_choked": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_exceeds_maximum": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "rate_has_recirculation": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "speed": [
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN,
                                NaN
                            ]
                        }
                    ],
                    "turbine_result": null
                }
            ],
            "sub_components": []
        },
        "some_genset": {
            "component_result": {
                "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 14.34505, 14.34505, 19.34505, 19.34505, 19.34505, 19.34505, 19.34505, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055] unit=<Unit.STANDARD_CUBIC_METER_PER_DAY: 'Sm3/d'>",
                "id": "some_genset",
                "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                "periods": {
                    "periods": [
                        {
                            "end": "2011-01-01 00:00:00",
                            "start": "2010-01-01 00:00:00"
                        },
                        {
                            "end": "2012-01-01 00:00:00",
                            "start": "2011-01-01 00:00:00"
                        },
                        {
                            "end": "2013-01-01 00:00:00",
                            "start": "2012-01-01 00:00:00"
                        },
                        {
                            "end": "2014-01-01 00:00:00",
                            "start": "2013-01-01 00:00:00"
                        },
                        {
                            "end": "2015-01-01 00:00:00",
                            "start": "2014-01-01 00:00:00"
                        },
                        {
                            "end": "2016-01-01 00:00:00",
                            "start": "2015-01-01 00:00:00"
                        },
                        {
                            "end": "2017-01-01 00:00:00",
                            "start": "2016-01-01 00:00:00"
                        },
                        {
                            "end": "2018-01-01 00:00:00",
                            "start": "2017-01-01 00:00:00"
                        },
                        {
                            "end": "2019-01-01 00:00:00",
                            "start": "2018-01-01 00:00:00"
                        },
                        {
                            "end": "2020-01-01 00:00:00",
                            "start": "2019-01-01 00:00:00"
                        },
                        {
                            "end": "2021-01-01 00:00:00",
                            "start": "2020-01-01 00:00:00"
                        },
                        {
                            "end": "2022-01-01 00:00:00",
                            "start": "2021-01-01 00:00:00"
                        },
                        {
                            "end": "2023-01-01 00:00:00",
                            "start": "2022-01-01 00:00:00"
                        },
                        {
                            "end": "2024-01-01 00:00:00",
                            "start": "2023-01-01 00:00:00"
                        },
                        {
                            "end": "2025-01-01 00:00:00",
                            "start": "2024-01-01 00:00:00"
                        },
                        {
                            "end": "2026-01-01 00:00:00",
                            "start": "2025-01-01 00:00:00"
                        },
                        {
                            "end": "2027-01-01 00:00:00",
                            "start": "2026-01-01 00:00:00"
                        },
                        {
                            "end": "2028-01-01 00:00:00",
                            "start": "2027-01-01 00:00:00"
                        },
                        {
                            "end": "2029-01-01 00:00:00",
                            "start": "2028-01-01 00:00:00"
                        },
                        {
                            "end": "2030-01-01 00:00:00",
                            "start": "2029-01-01 00:00:00"
                        }
                    ]
                },
                "power": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 14.34505, 14.34505, 19.34505, 19.34505, 19.34505, 19.34505, 19.34505, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055, 4.345055] unit=<Unit.MEGA_WATT: 'MW'>",
                "power_capacity_margin": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[295.6549, 295.6549, 295.6549, 295.6549, 295.6549, 295.6549, 295.6549, 285.6549, 285.6549, 280.6549, 280.6549, 280.6549, 280.6549, 280.6549, 295.6549, 295.6549, 295.6549, 295.6549, 295.6549, 295.6549] unit=<Unit.MEGA_WATT: 'MW'>",
                "typ": "genset"
            },
            "models": [],
            "sub_components": []
        },
        "some_genset_startup_after_consumer": {
            "component_result": {
                "energy_usage": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 10.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.STANDARD_CUBIC_METER_PER_DAY: 'Sm3/d'>",
                "id": "some_genset_startup_after_consumer",
                "is_valid": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[False, False, False, False, False, False, False, False, False, True, True, True, True, True, True, True, True, True, True, True] unit=<Unit.NONE: 'N/A'>",
                "periods": {
                    "periods": [
                        {
                            "end": "2011-01-01 00:00:00",
                            "start": "2010-01-01 00:00:00"
                        },
                        {
                            "end": "2012-01-01 00:00:00",
                            "start": "2011-01-01 00:00:00"
                        },
                        {
                            "end": "2013-01-01 00:00:00",
                            "start": "2012-01-01 00:00:00"
                        },
                        {
                            "end": "2014-01-01 00:00:00",
                            "start": "2013-01-01 00:00:00"
                        },
                        {
                            "end": "2015-01-01 00:00:00",
                            "start": "2014-01-01 00:00:00"
                        },
                        {
                            "end": "2016-01-01 00:00:00",
                            "start": "2015-01-01 00:00:00"
                        },
                        {
                            "end": "2017-01-01 00:00:00",
                            "start": "2016-01-01 00:00:00"
                        },
                        {
                            "end": "2018-01-01 00:00:00",
                            "start": "2017-01-01 00:00:00"
                        },
                        {
                            "end": "2019-01-01 00:00:00",
                            "start": "2018-01-01 00:00:00"
                        },
                        {
                            "end": "2020-01-01 00:00:00",
                            "start": "2019-01-01 00:00:00"
                        },
                        {
                            "end": "2021-01-01 00:00:00",
                            "start": "2020-01-01 00:00:00"
                        },
                        {
                            "end": "2022-01-01 00:00:00",
                            "start": "2021-01-01 00:00:00"
                        },
                        {
                            "end": "2023-01-01 00:00:00",
                            "start": "2022-01-01 00:00:00"
                        },
                        {
                            "end": "2024-01-01 00:00:00",
                            "start": "2023-01-01 00:00:00"
                        },
                        {
                            "end": "2025-01-01 00:00:00",
                            "start": "2024-01-01 00:00:00"
                        },
                        {
                            "end": "2026-01-01 00:00:00",
                            "start": "2025-01-01 00:00:00"
                        },
                        {
                            "end": "2027-01-01 00:00:00",
                            "start": "2026-01-01 00:00:00"
                        },
                        {
                            "end": "2028-01-01 00:00:00",
                            "start": "2027-01-01 00:00:00"
                        },
                        {
                            "end": "2029-01-01 00:00:00",
                            "start": "2028-01-01 00:00:00"
                        },
                        {
                            "end": "2030-01-01 00:00:00",
                            "start": "2029-01-01 00:00:00"
                        }
                    ]
                },
                "power": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 10.0, 10.0, 10.0, 10.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] unit=<Unit.MEGA_WATT: 'MW'>",
                "power_capacity_margin": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0)), Period(start=datetime.datetime(2021, 1, 1, 0, 0), end=datetime.datetime(2022, 1, 1, 0, 0)), Period(start=datetime.datetime(2022, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 1, 0, 0)), Period(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2024, 1, 1, 0, 0)), Period(start=datetime.datetime(2024, 1, 1, 0, 0), end=datetime.datetime(2025, 1, 1, 0, 0)), Period(start=datetime.datetime(2025, 1, 1, 0, 0), end=datetime.datetime(2026, 1, 1, 0, 0)), Period(start=datetime.datetime(2026, 1, 1, 0, 0), end=datetime.datetime(2027, 1, 1, 0, 0)), Period(start=datetime.datetime(2027, 1, 1, 0, 0), end=datetime.datetime(2028, 1, 1, 0, 0)), Period(start=datetime.datetime(2028, 1, 1, 0, 0), end=datetime.datetime(2029, 1, 1, 0, 0)), Period(start=datetime.datetime(2029, 1, 1, 0, 0), end=datetime.datetime(2030, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 290.0, 290.0, 290.0, 290.0, 290.0, 300.0, 300.0, 300.0, 300.0, 300.0, 300.0] unit=<Unit.MEGA_WATT: 'MW'>",
                "typ": "genset"
            },
            "models": [],
            "sub_components": []
        }
    },
    "emission_results": {
        "fuel_consumer_with_time_slots": {
            "co2": {
                "name": "co2",
                "periods": {
                    "periods": [
                        {
                            "end": "2011-01-01 00:00:00",
                            "start": "2010-01-01 00:00:00"
                        },
                        {
                            "end": "2012-01-01 00:00:00",
                            "start": "2011-01-01 00:00:00"
                        },
                        {
                            "end": "2013-01-01 00:00:00",
                            "start": "2012-01-01 00:00:00"
                        },
                        {
                            "end": "2014-01-01 00:00:00",
                            "start": "2013-01-01 00:00:00"
                        },
                        {
                            "end": "2015-01-01 00:00:00",
                            "start": "2014-01-01 00:00:00"
                        },
                        {
                            "end": "2016-01-01 00:00:00",
                            "start": "2015-01-01 00:00:00"
                        },
                        {
                            "end": "2017-01-01 00:00:00",
                            "start": "2016-01-01 00:00:00"
                        },
                        {
                            "end": "2018-01-01 00:00:00",
                            "start": "2017-01-01 00:00:00"
                        },
                        {
                            "end": "2019-01-01 00:00:00",
                            "start": "2018-01-01 00:00:00"
                        },
                        {
                            "end": "2020-01-01 00:00:00",
                            "start": "2019-01-01 00:00:00"
                        },
                        {
                            "end": "2021-01-01 00:00:00",
                            "start": "2020-01-01 00:00:00"
                        }
                    ]
                },
                "rate": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0))]) values=[0.0099, 0.0099, 0.0099, 0.0099, 0.0099, 0.0099, 0.0099, 0.0099, 0.0099, 0.0099, 0.0099] unit=<Unit.TONS_PER_DAY: 't/d'>"
            }
        },
        "some_genset": {
            "co2": {
                "name": "co2",
                "periods": {
                    "periods": [
                        {
                            "end": "2011-01-01 00:00:00",
                            "start": "2010-01-01 00:00:00"
                        },
                        {
                            "end": "2012-01-01 00:00:00",
                            "start": "2011-01-01 00:00:00"
                        },
                        {
                            "end": "2013-01-01 00:00:00",
                            "start": "2012-01-01 00:00:00"
                        },
                        {
                            "end": "2014-01-01 00:00:00",
                            "start": "2013-01-01 00:00:00"
                        },
                        {
                            "end": "2015-01-01 00:00:00",
                            "start": "2014-01-01 00:00:00"
                        },
                        {
                            "end": "2016-01-01 00:00:00",
                            "start": "2015-01-01 00:00:00"
                        },
                        {
                            "end": "2017-01-01 00:00:00",
                            "start": "2016-01-01 00:00:00"
                        },
                        {
                            "end": "2018-01-01 00:00:00",
                            "start": "2017-01-01 00:00:00"
                        },
                        {
                            "end": "2019-01-01 00:00:00",
                            "start": "2018-01-01 00:00:00"
                        },
                        {
                            "end": "2020-01-01 00:00:00",
                            "start": "2019-01-01 00:00:00"
                        },
                        {
                            "end": "2021-01-01 00:00:00",
                            "start": "2020-01-01 00:00:00"
                        }
                    ]
                },
                "rate": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0))]) values=[0.009559, 0.009559, 0.009559, 0.009559, 0.009559, 0.009559, 0.009559, 0.031559, 0.031559, 0.042559, 0.042559] unit=<Unit.TONS_PER_DAY: 't/d'>"
            }
        },
        "some_genset_startup_after_consumer": {
            "co2": {
                "name": "co2",
                "periods": {
                    "periods": [
                        {
                            "end": "2011-01-01 00:00:00",
                            "start": "2010-01-01 00:00:00"
                        },
                        {
                            "end": "2012-01-01 00:00:00",
                            "start": "2011-01-01 00:00:00"
                        },
                        {
                            "end": "2013-01-01 00:00:00",
                            "start": "2012-01-01 00:00:00"
                        },
                        {
                            "end": "2014-01-01 00:00:00",
                            "start": "2013-01-01 00:00:00"
                        },
                        {
                            "end": "2015-01-01 00:00:00",
                            "start": "2014-01-01 00:00:00"
                        },
                        {
                            "end": "2016-01-01 00:00:00",
                            "start": "2015-01-01 00:00:00"
                        },
                        {
                            "end": "2017-01-01 00:00:00",
                            "start": "2016-01-01 00:00:00"
                        },
                        {
                            "end": "2018-01-01 00:00:00",
                            "start": "2017-01-01 00:00:00"
                        },
                        {
                            "end": "2019-01-01 00:00:00",
                            "start": "2018-01-01 00:00:00"
                        },
                        {
                            "end": "2020-01-01 00:00:00",
                            "start": "2019-01-01 00:00:00"
                        },
                        {
                            "end": "2021-01-01 00:00:00",
                            "start": "2020-01-01 00:00:00"
                        }
                    ]
                },
                "rate": "periods=Periods(periods=[Period(start=datetime.datetime(2010, 1, 1, 0, 0), end=datetime.datetime(2011, 1, 1, 0, 0)), Period(start=datetime.datetime(2011, 1, 1, 0, 0), end=datetime.datetime(2012, 1, 1, 0, 0)), Period(start=datetime.datetime(2012, 1, 1, 0, 0), end=datetime.datetime(2013, 1, 1, 0, 0)), Period(start=datetime.datetime(2013, 1, 1, 0, 0), end=datetime.datetime(2014, 1, 1, 0, 0)), Period(start=datetime.datetime(2014, 1, 1, 0, 0), end=datetime.datetime(2015, 1, 1, 0, 0)), Period(start=datetime.datetime(2015, 1, 1, 0, 0), end=datetime.datetime(2016, 1, 1, 0, 0)), Period(start=datetime.datetime(2016, 1, 1, 0, 0), end=datetime.datetime(2017, 1, 1, 0, 0)), Period(start=datetime.datetime(2017, 1, 1, 0, 0), end=datetime.datetime(2018, 1, 1, 0, 0)), Period(start=datetime.datetime(2018, 1, 1, 0, 0), end=datetime.datetime(2019, 1, 1, 0, 0)), Period(start=datetime.datetime(2019, 1, 1, 0, 0), end=datetime.datetime(2020, 1, 1, 0, 0)), Period(start=datetime.datetime(2020, 1, 1, 0, 0), end=datetime.datetime(2021, 1, 1, 0, 0))]) values=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.022, 0.022] unit=<Unit.TONS_PER_DAY: 't/d'>"
            }
        }
    },
    "variables_map": {
        "time_vector": [
            "2010-01-01 00:00:00",
            "2011-01-01 00:00:00",
            "2012-01-01 00:00:00",
            "2013-01-01 00:00:00",
            "2014-01-01 00:00:00",
            "2015-01-01 00:00:00",
            "2016-01-01 00:00:00",
            "2017-01-01 00:00:00",
            "2018-01-01 00:00:00",
            "2019-01-01 00:00:00",
            "2020-01-01 00:00:00",
            "2021-01-01 00:00:00",
            "2022-01-01 00:00:00",
            "2023-01-01 00:00:00",
            "2024-01-01 00:00:00",
            "2025-01-01 00:00:00",
            "2026-01-01 00:00:00",
            "2027-01-01 00:00:00",
            "2028-01-01 00:00:00",
            "2029-01-01 00:00:00",
            "2030-01-01 00:00:00"
        ],
        "variables": {
            "RATE": [
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0,
                5000.0
            ]
        }
    }
}