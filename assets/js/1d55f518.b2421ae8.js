"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2354],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(96540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}},48351:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"about/references/END","title":"END","description":"END","source":"@site/docs/about/references/END.md","sourceDirName":"about/references","slug":"/about/references/END","permalink":"/ecalc/docs/about/references/END","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/ecalc/tree/main/documentation/docs/about/references/END.md","tags":[],"version":"current","frontMatter":{},"sidebar":"about","previous":{"title":"EMITTER_MODEL","permalink":"/ecalc/docs/about/references/EMITTER_MODEL"},"next":{"title":"ENERGYFUNCTION","permalink":"/ecalc/docs/about/references/ENERGYFUNCTION"}}');var s=n(74848),r=n(28453);const o={},a="END",d={},c=[{value:"Description",id:"description",level:2},{value:"Format",id:"format",level:2},{value:"Example",id:"example",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"end",children:"END"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"/ecalc/docs/about/references/END",children:"END"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Child of"}),(0,s.jsx)(t.th,{children:"Children/Options"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"Yes"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"None"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"None"})})]})})]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["eCalc version 10.0.0: ",(0,s.jsx)(t.code,{children:"END"})," is required since v10.0.0. < v10.0.0 the ",(0,s.jsx)(t.code,{children:"END"})," keyword was optional, but it is now required to specify the end date of the simulation."]}),"\n"]})}),"\n",(0,s.jsxs)(t.admonition,{type:"important",children:[(0,s.jsxs)(t.p,{children:["The value given as ",(0,s.jsx)(t.code,{children:"END"})," is ",(0,s.jsx)(t.em,{children:"exclusive"}),", ie. the date specified is (just) not included in the simulation."]}),(0,s.jsxs)(t.p,{children:["Conversely to ",(0,s.jsx)(t.code,{children:"END"})," being ",(0,s.jsx)(t.em,{children:"exclusive"}),", the ",(0,s.jsx)(t.code,{children:"START"})," keyword is ",(0,s.jsx)(t.em,{children:"inclusive"}),", meaning that the date specified as ",(0,s.jsx)(t.code,{children:"START"})," is included in the simulation. If you are\nused to mathematical notation, it is specified as:"]}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"[START, END)"})})]}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(t.p,{children:["Global end date for eCalc to stop energy and emission calculations. This date is ",(0,s.jsx)(t.strong,{children:"required"})," to specify in the YAML file."]}),"\n",(0,s.jsx)(t.p,{children:'If you specify the end date as 2080-01-01, the last period to be calculated is 2079 is included in the output.\nThe hours, minutes and seconds of the day are implicitly set to "00:00:00", so the counting ends at midnight on\nJanuary 1st 2080 (2079-12-31 23:59:59). The same applies if you specify only the year, e.g. 2080, which is equivalent to 2080-01-01.'}),"\n",(0,s.jsx)(t.p,{children:"You can provide a date that is after the global time vector, but it is recommended to set it to the end of your\ntimeseries data. Normally the timeseries do not provide this information directly. The last timestep provided in a\ntimeseries is e.g. 2079-01-01, which would often mean that the data changed at that point, and will e.g. be valid 1\nyear from then. To make sure that eCalc stops at the correct place, you have to specify the exclusive date of the data."}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"/ecalc/docs/about/references/START",children:"START"})," keyword have similar behaviour."]}),"\n",(0,s.jsx)(t.h2,{id:"format",children:"Format"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"END: <YYYY-MM-DD>\n"})}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(t.p,{children:["Given an input dataset from ",(0,s.jsx)(t.strong,{children:"01-01-2000 - 01-01-2040"}),", ignoring the last 20 years of data\ncan be achieved as follows:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"END: 2020-01-01\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);