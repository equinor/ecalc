"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2399],{12773:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"about/references/MODELS","title":"MODELS","description":"MODELS","source":"@site/docs/about/references/MODELS.md","sourceDirName":"about/references","slug":"/about/references/MODELS","permalink":"/ecalc/docs/about/references/MODELS","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/ecalc/tree/main/documentation/docs/about/references/MODELS.md","tags":[],"version":"current","frontMatter":{},"sidebar":"about","previous":{"title":"MAX_USAGE_FROM_SHORE","permalink":"/ecalc/docs/about/references/MAX_USAGE_FROM_SHORE"},"next":{"title":"NAME","permalink":"/ecalc/docs/about/references/NAME"}}');var c=r(74848),t=r(28453);const o={},d="MODELS",i={},l=[{value:"Description",id:"description",level:2},{value:"Format",id:"format",level:2},{value:"Supported Model types",id:"supported-model-types",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"models",children:"MODELS"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.a,{href:"/ecalc/docs/about/references/MODELS",children:"MODELS"})}),"\n",(0,c.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,c.jsxs)(n.p,{children:["Each element is specified in a list. These are later used as input to other models, or in the\n",(0,c.jsx)(n.a,{href:"/ecalc/docs/about/references/INSTALLATIONS",children:"INSTALLATIONS"})," part of the setup by referencing their\n",(0,c.jsx)(n.a,{href:"/ecalc/docs/about/references/NAME",children:"NAME"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:["This part of the setup specifies models not having any input data and/or multi level models, that is models which use\nother models (from both ",(0,c.jsx)(n.a,{href:"/ecalc/docs/about/references/MODELS",children:"MODELS"})," and from ",(0,c.jsx)(n.a,{href:"/ecalc/docs/about/references/FACILITY_INPUTS",children:"FACILITY_INPUTS"}),")."]}),"\n",(0,c.jsx)(n.h2,{id:"format",children:"Format"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: <name of model, for reference>\n    TYPE: <model type>\n    <other keywords according to TYPE>\n"})}),"\n",(0,c.jsx)(n.h2,{id:"supported-model-types",children:"Supported Model types"}),"\n",(0,c.jsx)(n.p,{children:"The supported types are:"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"FLUID"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"COMPRESSOR_CHART"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"SINGLE_SPEED_COMPRESSOR_TRAIN"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"SIMPLIFIED_VARIABLE_SPEED_COMPRESSOR_TRAIN"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"VARIABLE_SPEED_COMPRESSOR_TRAIN"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"VARIABLE_SPEED_COMPRESSOR_TRAIN_MULTIPLE_STREAMS_AND_PRESSURES"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"TURBINE"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"COMPRESSOR_WITH_TURBINE"})}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["The documentation of each of these is found on the ",(0,c.jsx)(n.a,{href:"/ecalc/docs/about/modelling/setup/models/",children:"Models"})," page."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>d});var s=r(96540);const c={},t=s.createContext(c);function o(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);