"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3224],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(96540);const i={},s=r.createContext(i);function a(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:t},e.children)}},83308:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"about/references/START","title":"START","description":"START","source":"@site/docs/about/references/START.md","sourceDirName":"about/references","slug":"/about/references/START","permalink":"/ecalc/docs/about/references/START","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/ecalc/tree/main/documentation/docs/about/references/START.md","tags":[],"version":"current","frontMatter":{},"sidebar":"about","previous":{"title":"STAGES","permalink":"/ecalc/docs/about/references/STAGES"},"next":{"title":"STREAM","permalink":"/ecalc/docs/about/references/STREAM"}}');var i=n(74848),s=n(28453);const a={},o="START",c={},d=[{value:"Description",id:"description",level:2},{value:"Format",id:"format",level:2},{value:"Example",id:"example",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"start",children:"START"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"/ecalc/docs/about/references/START",children:"START"})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Required"}),(0,i.jsx)(t.th,{children:"Child of"}),(0,i.jsx)(t.th,{children:"Children/Options"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"No"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"None"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"None"})})]})})]}),"\n",(0,i.jsxs)(t.admonition,{type:"important",children:[(0,i.jsxs)(t.p,{children:["The value given as ",(0,i.jsx)(t.code,{children:"START"})," is ",(0,i.jsx)(t.em,{children:"inclusive"})," (and ",(0,i.jsx)(t.code,{children:"END"})," is ",(0,i.jsx)(t.em,{children:"exclusive"}),"), meaning that the date specified is included in the simulation. If you e.g. specify the start date as ",(0,i.jsx)(t.code,{children:"2020-01-01"}),",\nand the ",(0,i.jsx)(t.code,{children:"END"})," is ",(0,i.jsx)(t.code,{children:"2021-01-01"}),", the interval given as mathematical notation is:"]}),(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"[START, END)"})})]}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"The global start date for eCalc to begin energy and emission calculations. It is recommended that you have control\nof which date you want data to be calculated and exported for, in particular when using LTP and FDE workflows."}),"\n",(0,i.jsx)(t.p,{children:'If you specify 2020-01-01, the whole year of 2020 is included in the output. The hours, minutes and seconds\nof the day are implicitly set to "00:00:00", so the counting starts from midnight on January 1st 2020.'}),"\n",(0,i.jsxs)(t.p,{children:["You can provide a  date that is before the global time vector, but it is recommended to set it to the start of your timeseries data. Normally the\ntimeseries data provides this information directly, when specifying the first time step e.g. 2020-01-01, meaning that the data is valid from January 1st 2020,\nbut  data by default has  (",(0,i.jsx)(t.a,{href:"/ecalc/docs/about/references/INTERPOLATION_TYPE",children:"INTERPOLATION_TYPE"}),"), which means that it backfills data, and then we will know how far back\nto backfill data (ie  defines this for the first period)."]}),"\n",(0,i.jsxs)(t.p,{children:["The cousin of is ",(0,i.jsx)(t.a,{href:"/ecalc/docs/about/references/END",children:"END"})," and have similar behaviour, but check the reference for details, to make sure you have the correct understanding."]}),"\n",(0,i.jsxs)(t.p,{children:["If it is not specified, eCalc will make an educated ",(0,i.jsx)(t.em,{children:"GUESS"})," on when the output data should start, but that may be incorrect, therefore it is recommended that you\nstay in control of that to make sure you get correct output."]}),"\n",(0,i.jsx)(t.h2,{id:"format",children:"Format"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"START: <YYYY-MM-DD>\n"})}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(t.p,{children:["Given an input dataset from ",(0,i.jsx)(t.strong,{children:"01-01-2000 - 01-01-2040"}),", ignoring the first 20 years of data\ncan be achieved as follows:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"START: 2020-01-01\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);