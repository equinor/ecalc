"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5785],{28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var o=i(96540);const l={},t=o.createContext(l);function s(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),o.createElement(t.Provider,{value:n},e.children)}},53956:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"about/modelling/setup/models/fluid_model","title":"Fluid model","description":"Selecting a fluid model in eCalc","source":"@site/docs/about/modelling/setup/models/fluid_model.md","sourceDirName":"about/modelling/setup/models","slug":"/about/modelling/setup/models/fluid_model","permalink":"/ecalc/docs/about/modelling/setup/models/fluid_model","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/ecalc/tree/main/documentation/docs/about/modelling/setup/models/fluid_model.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Fluid model","sidebar_position":1,"description":"Selecting a fluid model in eCalc"},"sidebar":"about","previous":{"title":"Models","permalink":"/ecalc/docs/about/modelling/setup/models/"},"next":{"title":"Compressor modelling","permalink":"/ecalc/docs/about/modelling/setup/models/compressor_modelling/"}}');var l=i(74848),t=i(28453);const s={title:"Fluid model",sidebar_position:1,description:"Selecting a fluid model in eCalc"},a="Fluid model",d={},r=[{value:"Fluid model using predefined composition",id:"fluid-model-using-predefined-composition",level:2},{value:"Format",id:"format",level:3},{value:"Examples",id:"examples",level:3},{value:"Fluid model with user-specified composition",id:"fluid-model-with-user-specified-composition",level:2},{value:"Format",id:"format-1",level:3},{value:"Example",id:"example",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"fluid-model",children:"Fluid model"})}),"\n",(0,l.jsx)(n.p,{children:"To calculate the energy usage related to compression of a natural gas, information about the composition is needed, i.e.\nwhich components it consists of and the (mole) fraction of each. Typical components for natural gas are alkanes such as\nmethane, ethane, propane, butane, pentane, hexane in addition to water, nitrogen and carbone dioxide. Alkanes with seven\nor more carbon atoms may occur, but these are often just part of the liquid (oil) phase and not significant in dry gas\ncompression."}),"\n",(0,l.jsxs)(n.p,{children:["The composition can either be selected from a set of predefined compositions available within eCalc, or the mole\nfraction of each component can be user specified directly. This is controlled through the\n",(0,l.jsx)(n.a,{href:"/ecalc/docs/about/references/FLUID_MODEL_TYPE",children:"FLUID_MODEL_TYPE"})," keyword."]}),"\n",(0,l.jsx)(n.p,{children:"As the fluid is going through the compressor in a fluid dynamic process, the enthalpy changes, resulting in a new state\nwith increased pressure and temperature, and decreased volume. To estimate these changes, an equation-of-state (EOS)\nmodel is used. The default EOS model in eCalc is SRK (Soave-Redlich-Kwong)."}),"\n",(0,l.jsx)(n.p,{children:"The GERG models (GERG 2008) are used to calculate enthalpy, gamma and density, whilst other properties such as molar mass\nis based on either SRK or PR."}),"\n",(0,l.jsx)(n.p,{children:"Available EOS models"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"SRK (Soave-Redlich-Kwong)"}),"\n",(0,l.jsx)(n.li,{children:"PR (Peng-Robinson)"}),"\n",(0,l.jsx)(n.li,{children:"GERG_SRK"}),"\n",(0,l.jsx)(n.li,{children:"GERG_PR"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["This is controlled through the ",(0,l.jsx)(n.a,{href:"/ecalc/docs/about/references/EOS_MODEL",children:"EOS_MODEL"})," keyword. If the\n",(0,l.jsx)(n.a,{href:"/ecalc/docs/about/references/EOS_MODEL",children:"EOS_MODEL"})," is not specified, it will be defaulted to ",(0,l.jsx)(n.code,{children:"SRK"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"fluid-model-using-predefined-composition",children:"Fluid model using predefined composition"}),"\n",(0,l.jsxs)(n.p,{children:["If the ",(0,l.jsx)(n.a,{href:"/ecalc/docs/about/references/FLUID_MODEL_TYPE",children:"FLUID_MODEL_TYPE"})," is ",(0,l.jsx)(n.code,{children:"PREDEFINED"})," the\n",(0,l.jsx)(n.a,{href:"/ecalc/docs/about/references/GAS_TYPE",children:"GAS_TYPE"})," must be defined. Available gas types (with mole weights) are:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"ULTRA_DRY (17.1 kg/kmol)"}),"\n",(0,l.jsx)(n.li,{children:"DRY (18.3 kg/kmol)"}),"\n",(0,l.jsx)(n.li,{children:"MEDIUM (19.4 kg/kmol)"}),"\n",(0,l.jsx)(n.li,{children:"RICH (21.1 kg/kmol)"}),"\n",(0,l.jsx)(n.li,{children:"ULTRA_RICH (24.6 kg/kmol)"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["If no ",(0,l.jsx)(n.a,{href:"/ecalc/docs/about/references/GAS_TYPE",children:"GAS_TYPE"})," is specified, it will be defaulted to ",(0,l.jsx)(n.code,{children:"MEDIUM"}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"format",children:"Format"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: <name of fluid model, for reference>\n    TYPE: FLUID\n    FLUID_MODEL_TYPE: PREDEFINED\n    EOS_MODEL: <eos model>\n    GAS_TYPE: <name of a predefined composition>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.p,{children:"Examples with predefined fluid"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: fluid_model_reference_name\n    TYPE: FLUID\n    FLUID_MODEL_TYPE: PREDEFINED\n    EOS_MODEL: SRK\n    GAS_TYPE: MEDIUM\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: fluid_model_reference_name\n    TYPE: FLUID\n    FLUID_MODEL_TYPE: PREDEFINED\n    EOS_MODEL: PR\n    GAS_TYPE: ULTRA_DRY\n"})}),"\n",(0,l.jsx)(n.p,{children:"Example where EOS is defaulted to SRK and GAS_TYPE defaulted to MEDIUM"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: fluid_model_reference_name\n    TYPE: FLUID\n    FLUID_MODEL_TYPE: PREDEFINED\n"})}),"\n",(0,l.jsx)(n.h2,{id:"fluid-model-with-user-specified-composition",children:"Fluid model with user-specified composition"}),"\n",(0,l.jsxs)(n.p,{children:["If the ",(0,l.jsx)(n.a,{href:"/ecalc/docs/about/references/FLUID_MODEL_TYPE",children:"FLUID_MODEL_TYPE"})," is ",(0,l.jsx)(n.code,{children:"COMPOSITION"})," the\n",(0,l.jsx)(n.a,{href:"/ecalc/docs/about/references/COMPOSITION",children:"COMPOSITION"})," must be defined. The composition is specified by setting\nthe mole fraction of each component. The available components are:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"water"}),"\n",(0,l.jsx)(n.li,{children:"nitrogen"}),"\n",(0,l.jsx)(n.li,{children:"CO2"}),"\n",(0,l.jsx)(n.li,{children:"methane"}),"\n",(0,l.jsx)(n.li,{children:"ethane"}),"\n",(0,l.jsx)(n.li,{children:"propane"}),"\n",(0,l.jsx)(n.li,{children:"i_butane"}),"\n",(0,l.jsx)(n.li,{children:"n_butane"}),"\n",(0,l.jsx)(n.li,{children:"i_pentane"}),"\n",(0,l.jsx)(n.li,{children:"n_pentane"}),"\n",(0,l.jsx)(n.li,{children:"n_hexane"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Setting the mole fraction for ",(0,l.jsx)(n.strong,{children:"methane is required"}),", all other components\nare optional and will be set to 0 if not specified. If methane is not part of your composition, simply put 0.0 for it."]}),"\n",(0,l.jsx)(n.p,{children:"It is not important that the fractions sum to one as they will be normalized by eCalc. It is the relative amount of\neach that will be important."}),"\n",(0,l.jsx)(n.h3,{id:"format-1",children:"Format"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: <name of fluid model, for reference>\n    TYPE: FLUID\n    FLUID_MODEL_TYPE: COMPOSITION\n    EOS_MODEL: <eos model>\n    COMPOSITION:\n      water: <mole fraction>\n      nitrogen: <mole fraction>\n      CO2: <mole fraction>\n      methane: <mole fraction, required>\n      ethane: <mole fraction>\n      propane: <mole fraction>\n      i_butane: <mole fraction>\n      n_butane: <mole fraction>\n      i_pentane: <mole fraction>\n      n_pentane: <mole fraction>\n      n_hexane: <mole fraction>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: <name of fluid model, for reference>\n    TYPE: FLUID\n    FLUID_MODEL_TYPE: COMPOSITION\n    EOS_MODEL: srk\n    COMPOSITION:\n      water: 0.1\n      nitrogen: 0.74373\n      CO2: 2.415619\n      methane: 85.60145\n      ethane: 6.707826\n      propane: 2.611471\n      i_butane: 0.45077\n      n_butane: 0.691702\n      i_pentane: 0.210714\n      n_pentane: 0.197937\n      n_hexane: 0.368786\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);