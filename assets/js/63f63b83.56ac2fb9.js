"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9722],{18281:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"about/references/FUEL","title":"FUEL","description":"... /","source":"@site/docs/about/references/FUEL.md","sourceDirName":"about/references","slug":"/about/references/FUEL","permalink":"/ecalc/docs/about/references/FUEL","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/ecalc/tree/main/documentation/docs/about/references/FUEL.md","tags":[],"version":"current","frontMatter":{},"sidebar":"about","previous":{"title":"FLUID_MODEL_TYPE","permalink":"/ecalc/docs/about/references/FLUID_MODEL_TYPE"},"next":{"title":"FUELCONSUMERS","permalink":"/ecalc/docs/about/references/FUELCONSUMERS"}}');var s=t(74848),c=t(28453);const a={},l="FUEL",i={},o=[{value:"Description",id:"description",level:2},{value:"Format",id:"format",level:3},{value:"Example",id:"example",level:3},{value:"Constant fuel type",id:"constant-fuel-type",level:4},{value:"Time-varying fuel type",id:"time-varying-fuel-type",level:4}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"fuel",children:"FUEL"})}),"\n",(0,s.jsxs)(n.p,{children:["... /\n",(0,s.jsx)(n.a,{href:"/ecalc/docs/about/references/FUEL",children:"FUEL"})]}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"/ecalc/docs/about/references/FUEL",children:"FUEL"})," keyword defines the fuel type that can be used in\n",(0,s.jsx)(n.code,{children:"INSTALLATIONS"}),", ",(0,s.jsx)(n.code,{children:"GENERATORSETS"}),", or ",(0,s.jsx)(n.code,{children:"FUELCONSUMERS"}),".\nIt can be set directly and used for the entire time interval, or it can be set differently for different time intervals."]}),"\n",(0,s.jsx)(n.h3,{id:"format",children:"Format"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"FUEL: <fuel_type>\n"})}),"\n",(0,s.jsx)(n.p,{children:"or"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"FUEL:\n  <DATE>: <fuel_type>\n  <DATE>: <fuel_type>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.h4,{id:"constant-fuel-type",children:"Constant fuel type"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"FUEL: fuel_gas\n"})}),"\n",(0,s.jsx)(n.h4,{id:"time-varying-fuel-type",children:"Time-varying fuel type"}),"\n",(0,s.jsxs)(n.p,{children:["This example assumes that two fuels have been defined: ",(0,s.jsx)(n.code,{children:"fuel_gas"})," and ",(0,s.jsx)(n.code,{children:"diesel"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"FUEL:\n  1994-01-01: fuel_gas\n  2000-01-01: diesel\n"})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(96540);const s={},c=r.createContext(s);function a(e){const n=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);