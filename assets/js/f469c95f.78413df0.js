"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3427],{28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>t});var r=n(96540);const o={},c=r.createContext(o);function i(e){const s=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(c.Provider,{value:s},e.children)}},45679:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>t,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"about/references/OPERATIONAL_SETTINGS","title":"OPERATIONAL_SETTINGS","description":"INSTALLATIONS /","source":"@site/docs/about/references/OPERATIONAL_SETTINGS.md","sourceDirName":"about/references","slug":"/about/references/OPERATIONAL_SETTINGS","permalink":"/ecalc/docs/about/references/OPERATIONAL_SETTINGS","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/ecalc/tree/main/documentation/docs/about/references/OPERATIONAL_SETTINGS.md","tags":[],"version":"current","frontMatter":{},"sidebar":"about","previous":{"title":"NAME","permalink":"/ecalc/docs/about/references/NAME"},"next":{"title":"POLYTROPIC_EFFICIENCY","permalink":"/ecalc/docs/about/references/POLYTROPIC_EFFICIENCY"}}');var o=n(74848),c=n(28453);const i={},t="OPERATIONAL_SETTINGS",a={},d=[{value:"Description",id:"description",level:2},{value:"RATES",id:"rates",level:3},{value:"RATE_FRACTIONS",id:"rate_fractions",level:3},{value:"SUCTION_PRESSURES",id:"suction_pressures",level:3},{value:"DISCHARGE_PRESSURES",id:"discharge_pressures",level:3},{value:"FLUID_DENSITIES",id:"fluid_densities",level:3},{value:"CROSSOVER",id:"crossover",level:3},{value:"Example 1:",id:"example-1",level:3},{value:"Example 2:",id:"example-2",level:3},{value:"Format",id:"format",level:2},{value:"Example",id:"example",level:2}];function S(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"operational_settings",children:"OPERATIONAL_SETTINGS"})}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/INSTALLATIONS",children:"INSTALLATIONS"})," /\n[...] /\n",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/ENERGY_USAGE_MODEL",children:"ENERGY_USAGE_MODEL"})," /\n",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/OPERATIONAL_SETTINGS",children:"OPERATIONAL_SETTINGS"})]}),"\n",(0,o.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,o.jsxs)(s.p,{children:["Used to define the operational settings in an ",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/ENERGY_USAGE_MODEL",children:"ENERGY_USAGE_MODEL"}),"\nof type ",(0,o.jsx)(s.code,{children:"PUMP_SYSTEM"})," or ",(0,o.jsx)(s.code,{children:"COMPRESSOR_SYSTEM"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["The rate [Sm",(0,o.jsx)("sup",{children:"3"}),"/day] through each consumer in the system may be specified in two different ways, either directly using\n",(0,o.jsx)(s.code,{children:"RATES"}),", or by defining the ",(0,o.jsx)(s.code,{children:"rate fraction<RATE_FRACTIONS>"})," for each consumer which is then multiplied with the\n",(0,o.jsx)(s.code,{children:"total system rate<TOTAL_SYSTEM_RATE>"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["The suction pressure may either be specified with ",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/SUCTION_PRESSURE",children:"SUCTION_PRESSURE"}),"\nwhich will then be the common suction pressure for all consumers in the system. Alternatively,\n",(0,o.jsx)(s.code,{children:"SUCTION_PRESSURES"}),"  may be used to specify one suction pressure expression per consumer."]}),"\n",(0,o.jsxs)(s.p,{children:["The discharge pressure may either be specified with ",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/DISCHARGE_PRESSURE",children:"DISCHARGE_PRESSURE"}),"\nwhich will then be the common discharge pressure for all consumers in the system. Alternatively,\n",(0,o.jsx)(s.code,{children:"DISCHARGE_PRESSURES"})," may be used to specify one discharge pressure expression per consumer."]}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.code,{children:"CROSSOVER"})," may be used to specify if there are any available cross-overs between the consumers in this operational\nsetting."]}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.code,{children:"FLUID_DENSITIES"})," may be used for pump systems to specify one fluid density expression per pump."]}),"\n",(0,o.jsxs)(s.p,{children:["For all keywords where there is one expression per consumer, ",(0,o.jsx)(s.code,{children:"RATES"}),", ",(0,o.jsx)(s.code,{children:"RATE_FRACTIONS"}),", ",(0,o.jsx)(s.code,{children:"SUCTION_PRESSURES"}),",\n",(0,o.jsx)(s.code,{children:"DISCHARGE_PRESSURES"})," and ",(0,o.jsx)(s.code,{children:"FLUID_DENSITIES"}),", the expressions must be entered in a\nlist where the number of elements is equal to the number of ",(0,o.jsx)(s.code,{children:"compressors<COMPRESSORS>"}),"/",(0,o.jsx)(s.code,{children:"pumps<PUMPS>"})]}),"\n",(0,o.jsx)(s.h3,{id:"rates",children:"RATES"}),"\n",(0,o.jsxs)(s.p,{children:["A list with one expression per consumer specifying the rate [Sm",(0,o.jsx)("sup",{children:"3"}),"/day] for each consumer. Use either ",(0,o.jsx)(s.code,{children:"RATES"})," or ",(0,o.jsx)(s.code,{children:"RATE_FRACTIONS"}),",\nnot both in one operational setting."]}),"\n",(0,o.jsx)(s.h3,{id:"rate_fractions",children:"RATE_FRACTIONS"}),"\n",(0,o.jsxs)(s.p,{children:["A list with one expression per consumer specifying the rate fraction for each consumer. If this is used,\n",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/TOTAL_SYSTEM_RATE",children:"TOTAL_SYSTEM_RATE"})," for the ",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/ENERGY_USAGE_MODEL",children:"ENERGY_USAGE_MODEL"}),"\nis also required. Use either ",(0,o.jsx)(s.code,{children:"RATES"})," or ",(0,o.jsx)(s.code,{children:"RATE_FRACTIONS"}),", not both in one operational setting."]}),"\n",(0,o.jsx)(s.h3,{id:"suction_pressures",children:"SUCTION_PRESSURES"}),"\n",(0,o.jsxs)(s.p,{children:["A list with one expression per consumer specifying the suction pressure for each consumer. Use either ",(0,o.jsx)(s.code,{children:"SUCTION_PRESSURES"})," or\n",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/SUCTION_PRESSURE",children:"SUCTION_PRESSURE"}),", not both in the same operational setting."]}),"\n",(0,o.jsxs)(s.p,{children:["Use ",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/SUCTION_PRESSURE",children:"SUCTION_PRESSURE"})," to set the same suction pressure for all consumers in the system and\n",(0,o.jsx)(s.code,{children:"SUCTION_PRESSURES"})," to specify one suction pressure expression per consumer."]}),"\n",(0,o.jsx)(s.h3,{id:"discharge_pressures",children:"DISCHARGE_PRESSURES"}),"\n",(0,o.jsxs)(s.p,{children:["A list with one expression per consumer specifying the discharge pressure for each consumer. Use either ",(0,o.jsx)(s.code,{children:"DISCHARGE_PRESSURES"}),"\nor ",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/DISCHARGE_PRESSURE",children:"DISCHARGE_PRESSURE"}),", not both in the same operational setting."]}),"\n",(0,o.jsxs)(s.p,{children:["Use ",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/DISCHARGE_PRESSURE",children:"DISCHARGE_PRESSURE"})," to set the same discharge pressure for all consumers in the system and\n",(0,o.jsx)(s.code,{children:"DISCHARGE_PRESSURES"})," to specify one discharge pressure expression per consumer."]}),"\n",(0,o.jsx)(s.h3,{id:"fluid_densities",children:"FLUID_DENSITIES"}),"\n",(0,o.jsxs)(s.p,{children:["Only supported for ",(0,o.jsx)(s.code,{children:"energy usage models<ENERGY_USAGE_MODEL>"})," of type ",(0,o.jsx)(s.code,{children:"PUMP_SYSTEM"}),".\nA list with one expression per consumer specifying the fluid density for each consumer. If used, it will over-ride\n",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/FLUID_DENSITY",children:"FLUID_DENSITY"})," for the ",(0,o.jsx)(s.code,{children:"PUMP_SYSTEM"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["Use ",(0,o.jsx)(s.a,{href:"/ecalc/docs/about/references/FLUID_DENSITY",children:"FLUID_DENSITY"})," for the ",(0,o.jsx)(s.code,{children:"energy usage models<ENERGY_USAGE_MODEL>"}),"\nto set one fixed fluid density for the entire system for all operational settings. Use\n",(0,o.jsx)(s.code,{children:"FLUID_DENSITIES"})," for the ",(0,o.jsx)(s.code,{children:"operational setting<OPERATIONAL_SETTINGS>"})," to vary the fluid density between consumers and operational settings."]}),"\n",(0,o.jsx)(s.h3,{id:"crossover",children:"CROSSOVER"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.code,{children:"CROSSOVER"}),' specifies if rates are to be crossed over to another consumer if rate capacity is exceeded. If the\nenergy consumption calculation is not successful for a consumer, and the consumer has a valid cross-over defined, the\nconsumer will be allocated its maximum rate and the exceeding rate will be added to the cross-over consumer. To avoid\nloops, a consumer can only be either receiving or giving away rate. For a cross-over to be valid, the discharge pressure\nat the consumer "receiving" overshooting rate must be higher than or equal to the discharge pressure of the "sending"\nconsumer. This is because it is possible to choke pressure down to meet the outlet pressure in a flow line with lower\npressure, but not possible to "pressure up" in the crossover flow line.\nSome examples show how the crossover logic works:']}),"\n",(0,o.jsxs)(s.p,{children:["Crossover is given as and list of integer values for the first position is the first consumer, second position is the\nsecond consumer, etc. The number specifies which consumer to send cross-over flow to, and 0 signifies no cross-over\npossible. ",(0,o.jsx)(s.strong,{children:"Note that we use 1-index here."})]}),"\n",(0,o.jsx)(s.h3,{id:"example-1",children:"Example 1:"}),"\n",(0,o.jsx)(s.p,{children:"Two consumers where there is a cross-over such that if the rate for the first consumer exceeds its capacity,\nthe excess rate will be processed by the second consumer. The second consumer can not cross-over to anyone."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"CROSSOVER: [2, 0]\n"})}),"\n",(0,o.jsx)(s.h3,{id:"example-2",children:"Example 2:"}),"\n",(0,o.jsx)(s.p,{children:"The first and second consumers may both send exceeding rate to the third consumer if their capacity is\nexceeded."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"CROSSOVER: [3,3,0]\n"})}),"\n",(0,o.jsx)(s.h2,{id:"format",children:"Format"}),"\n",(0,o.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"ENERGY_USAGE_MODEL:\n  TYPE: COMPRESSOR_SYSTEM\n  COMPRESSORS:\n    - NAME: export_compressor1\n      COMPRESSOR_MODEL: export_compressor_reference\n    - NAME: export_compressor2\n      COMPRESSOR_MODEL: export_compressor_reference\n    - NAME: injection_compressor\n      COMPRESSOR_MODEL: injection_compressor_reference\n  TOTAL_SYSTEM_RATE: SIM1;GAS_PROD {+} SIM1;GAS_LIFT\n  OPERATIONAL_SETTINGS:\n    - RATES:\n        - SIM1;GAS_SALES\n        - 0\n        - SIM1;GAS_INJ\n      SUCTION_PRESSURE: 50\n      DISCHARGE_PRESSURES:\n        - 150\n        - 150\n        - SIM1;INJ_PRESSURE\n    - RATES:\n        - SIM1;GAS_SALES {/} 2\n        - SIM1;GAS_SALES {/} 2\n        - SIM1;GAS_INJ\n      SUCTION_PRESSURE: 50\n      DISCHARGE_PRESSURES:\n        - 150\n        - 150\n        - SIM1;INJ_PRESSURE\n      CROSSOVER: [3, 3, 0]\n"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"ENERGY_USAGE_MODEL:\n  TYPE: PUMP_SYSTEM\n  PUMPS:\n    - NAME: pump1\n      CHART: water_injection_pump_reference\n    - NAME: pump2\n      CHART: water_injection_pump_reference\n  TOTAL_SYSTEM_RATE: SIM1;WATER_INJ\n  FLUID_DENSITY: (1000 {*} SIM1;WATER_PROD {+} 1050 {*} SIM2;WATER_PROD) {/} (SIM1;WATER_PROD {+} SIM2;WATER_PROD)\n  OPERATIONAL_SETTINGS:\n    - RATE_FRACTIONS: [1, 0]\n      SUCTION_PRESSURE: 3\n      DISCHARGE_PRESSURE: 200\n    - RATE_FRACTIONS: [0.5, 0.5]\n      SUCTION_PRESSURE: 3\n      DISCHARGE_PRESSURE: 200\n      FLUID_DENSITIES:\n        - 1000\n        - 1050\n"})})]})}function l(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(S,{...e})}):S(e)}}}]);