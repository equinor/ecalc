"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[934],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var o=t(96540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}},90564:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"contribute/guides/conventional_commits","title":"Conventional Commits","description":"Git commits are required to follow conventional commits.","source":"@site/docs/contribute/guides/conventional_commits.md","sourceDirName":"contribute/guides","slug":"/contribute/guides/conventional_commits","permalink":"/ecalc/docs/contribute/guides/conventional_commits","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/ecalc/tree/main/documentation/docs/contribute/guides/conventional_commits.md","tags":[],"version":"current","frontMatter":{},"sidebar":"contribute","previous":{"title":"Guides","permalink":"/ecalc/docs/category/guides"},"next":{"title":"Git","permalink":"/ecalc/docs/contribute/guides/git"}}');var s=t(74848),i=t(28453);const r={},c="Conventional Commits",d={},l=[];function a(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"conventional-commits",children:"Conventional Commits"})}),"\n",(0,s.jsxs)(n.p,{children:["Git commits are required to follow ",(0,s.jsx)(n.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/",children:"conventional commits"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The message should be structured like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"<type>[optional scope]: <description>\n\n[optional body]\n\n[optional footer(s)]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The type can be one of these types: ",(0,s.jsx)(n.strong,{children:"feat"}),", ",(0,s.jsx)(n.strong,{children:"fix"}),", ",(0,s.jsx)(n.strong,{children:"build"}),", ",(0,s.jsx)(n.strong,{children:"ci"}),", ",(0,s.jsx)(n.strong,{children:"docs"}),", ",(0,s.jsx)(n.strong,{children:"style"}),", ",(0,s.jsx)(n.strong,{children:"refactor"}),", ",(0,s.jsx)(n.strong,{children:"test"}),", and ",(0,s.jsx)(n.strong,{children:"chore"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The description should be lower-case for the first letter. For description of optional parts, please refer to the\n",(0,s.jsx)(n.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/",children:"conventional Commits Docs"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Here are some simple example conventional commits:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"feat: implement new awesome feature\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docs: add developer guidelines\n"})}),"\n",(0,s.jsx)(n.p,{children:"A more advanced example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"fix: prevent racing of requests\n\nIntroduce a request id and a reference to latest request. Dismiss\nincoming responses other than from latest request.\n\nRemove timeouts which were used to mitigate the racing issue but are\nobsolete now.\n\nReviewed-by: Z\nRefs: #123\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);