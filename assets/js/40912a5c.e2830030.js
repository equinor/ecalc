"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2810],{430:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>_,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"about/references/CALCULATE_MAX_RATE","title":"CALCULATE_MAX_RATE","description":"MODELS /","source":"@site/docs/about/references/CALCULATE_MAX_RATE.md","sourceDirName":"about/references","slug":"/about/references/CALCULATE_MAX_RATE","permalink":"/ecalc/docs/about/references/CALCULATE_MAX_RATE","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/ecalc/tree/main/documentation/docs/about/references/CALCULATE_MAX_RATE.md","tags":[],"version":"current","frontMatter":{},"sidebar":"about","previous":{"title":"CABLE_LOSS","permalink":"/ecalc/docs/about/references/CABLE_LOSS"},"next":{"title":"CATEGORY","permalink":"/ecalc/docs/about/references/CATEGORY"}}');var o=r(74848),t=r(28453);const i={},l="CALCULATE_MAX_RATE",a={},c=[{value:"Description",id:"description",level:2},{value:"Format",id:"format",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"calculate_max_rate",children:"CALCULATE_MAX_RATE"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/ecalc/docs/about/references/MODELS",children:"MODELS"})," /\n",(0,o.jsx)(n.a,{href:"/ecalc/docs/about/references/CALCULATE_MAX_RATE",children:"CALCULATE_MAX_RATE"})]}),"\n",(0,o.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,o.jsxs)(n.p,{children:["The keyword ",(0,o.jsx)(n.a,{href:"CALCULATE_MAX_RATE",children:"CALCULATE_MAX_RATE"})," is optional with default value ",(0,o.jsx)(n.code,{children:"False"}),". When set to ",(0,o.jsx)(n.code,{children:"True"}),", the\nmaximum standard rate the compressor train model can handle, based on the input suction and discharge pressures, will\nbe calculated and reported in the results. This will be done for all dates according to the requested output frequency."]}),"\n",(0,o.jsx)(n.p,{children:"Calculation of maximum standard rate is supported for compressor train models of type:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/ecalc/docs/about/modelling/setup/models/compressor_modelling/compressor_models_types/single_speed_compressor_train_model",children:"SINGLE_SPEED_COMPRESSOR_TRAIN"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/ecalc/docs/about/modelling/setup/models/compressor_modelling/compressor_models_types/simplified_variable_speed_compressor_train_model",children:"SIMPLIFIED_VARIABLE_SPEED_COMPRESSOR_TRAIN"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/ecalc/docs/about/modelling/setup/models/compressor_modelling/compressor_models_types/variable_speed_compressor_train_model",children:"VARIABLE_SPEED_COMPRESSOR_TRAIN"})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/ecalc/docs/about/modelling/setup/models/compressor_modelling/compressor_models_types/variable_speed_compressor_train_model_with_multiple_streams_and_pressures",children:"VARIABLE_SPEED_COMPRESSOR_TRAIN_MULTIPLE_STREAMS_AND_PRESSURES"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{title:"Warning",type:"warning",children:(0,o.jsx)(n.p,{children:"The CALCULATE_MAX_RATE keyword will in most cases add significantly to the run time of the model.\nOnly use when needed!"})}),"\n",(0,o.jsx)(n.h2,{id:"format",children:"Format"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: <model name>\n    TYPE: SIMPLIFIED_VARIABLE_SPEED_COMPRESSOR_TRAIN\n    FLUID_MODEL: <reference to fluid model, must be defined in [MODELS]>\n    COMPRESSOR_TRAIN:\n      STAGES:\n        - INLET_TEMPERATURE: <inlet temperature in Celsius for stage>\n          COMPRESSOR_CHART: <reference to compressor chart model for first stage, must be defined in MODELS or FACILITY_INPUTS>\n        - ... and so forth for each stage in the train\n    CALCULATE_MAX_RATE: <Optional. compressor train max standard rate [Sm3/day] in result if set to true. Default false. Use with caution. This will increase runtime significantly. >\n        ...\n"})}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: simplified_compressor_model\n    TYPE: SIMPLIFIED_VARIABLE_SPEED_COMPRESSOR_TRAIN\n    FLUID_MODEL: fluid_model_1\n    COMPRESSOR_TRAIN:\n      STAGES:\n        - INLET_TEMPERATURE: 30\n          COMPRESSOR_CHART: predefined_variable_speed_compressor_chart\n    CALCULATE_MAX_RATE: True\n"})})]})}function _(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var s=r(96540);const o={},t=s.createContext(o);function i(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);