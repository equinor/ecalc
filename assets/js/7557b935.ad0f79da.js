"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2788],{7832:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"about/migration_guides/v7_to_v8","title":"v7 to v8","description":"v7 to v8 migration","source":"@site/docs/about/migration_guides/v7_to_v8.md","sourceDirName":"about/migration_guides","slug":"/about/migration_guides/v7_to_v8","permalink":"/ecalc/docs/about/migration_guides/v7_to_v8","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/ecalc/tree/main/documentation/docs/about/migration_guides/v7_to_v8.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"title":"v7 to v8","description":"v7 to v8 migration","sidebar_position":0},"sidebar":"about","previous":{"title":"v8 to v8.1","permalink":"/ecalc/docs/about/migration_guides/v8-0_to_v81"},"next":{"title":"Input & Output Data","permalink":"/ecalc/docs/about/miscellaneous/"}}');var o=i(74848),t=i(28453);const r={title:"v7 to v8",description:"v7 to v8 migration",sidebar_position:0},l="v7 to v8",a={},c=[{value:"Yaml migration",id:"yaml-migration",level:2},{value:"Migration overview",id:"migration-overview",level:3},{value:"Main differences",id:"main-differences",level:3},{value:"1. All component names must be unique",id:"1-all-component-names-must-be-unique",level:4},{value:"2. UNITS for pump and compressor charts",id:"2-units-for-pump-and-compressor-charts",level:4},{value:"3. Restrict allowed characters in component names and emission names",id:"3-restrict-allowed-characters-in-component-names-and-emission-names",level:4},{value:"4. NAME no longer used for LTP reporting, use CATEGORY instead",id:"4-name-no-longer-used-for-ltp-reporting-use-category-instead",level:4},{value:"5. Not possible to use custom category names, pre-defined categories must be uppercase with hyphen as separator (i.e. FUEL-GAS)",id:"5-not-possible-to-use-custom-category-names-pre-defined-categories-must-be-uppercase-with-hyphen-as-separator-ie-fuel-gas",level:4},{value:"CLI migration",id:"cli-migration",level:2},{value:"1. Invoking eCalc\u2122 directly is no longer supported, use <code>ecalc run</code> instead.",id:"1-invoking-ecalc-directly-is-no-longer-supported-use-ecalc-run-instead",level:4},{value:"2. Log level should be specified as the first argument + log to file",id:"2-log-level-should-be-specified-as-the-first-argument--log-to-file",level:4},{value:"3. Model yaml-file needs to come last",id:"3-model-yaml-file-needs-to-come-last",level:4},{value:"4. Extrapolation correction is no longer optional",id:"4-extrapolation-correction-is-no-longer-optional",level:4},{value:"5. Argument for LTP export has changed from: <code>--centuries-ltp-export</code> to <code>--ltp-export</code>",id:"5-argument-for-ltp-export-has-changed-from---centuries-ltp-export-to---ltp-export",level:4},{value:"6. Simple results are now default for json",id:"6-simple-results-are-now-default-for-json",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"v7-to-v8",children:"v7 to v8"})}),"\n",(0,o.jsx)(n.p,{children:"In this migration guide you will find:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#yaml-migration",children:"YAML changes"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#cli-migration",children:"CLI changes"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"yaml-migration",children:"Yaml migration"}),"\n",(0,o.jsx)(n.h3,{id:"migration-overview",children:"Migration overview"}),"\n",(0,o.jsx)(n.p,{children:"This doc guides you through migrating an existing eCalc\u2122 model from version v7 to v8."}),"\n",(0,o.jsx)(n.p,{children:"We try to make this as easy as possible, and provide a step-by-step migration guide."}),"\n",(0,o.jsx)(n.h3,{id:"main-differences",children:"Main differences"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"All component names must be unique to avoid ambiguity in reporting"}),"\n",(0,o.jsx)(n.li,{children:"UNITS are required when setting up compressor and pump charts"}),"\n",(0,o.jsx)(n.li,{children:"Restrict allowed characters in component names and emission names"}),"\n",(0,o.jsx)(n.li,{children:"NAME no longer used for LTP reporting, use CATEGORY instead"}),"\n",(0,o.jsx)(n.li,{children:"Not possible to use custom category names, pre-defined categories must be uppercase with hyphen as separator (i.e. FUEL-GAS)"}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"1-all-component-names-must-be-unique",children:"1. All component names must be unique"}),"\n",(0,o.jsx)(n.p,{children:"All component names must be unique in order to avoid ambiguity in reporting. Components include asset/ecalc-model, installation,\ngenerator sets, electricity consumers, fuel consumers and direct emitters."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="main.yaml"',children:"INSTALLATIONS:\n  # This is old\n  - NAME: Installation\n    ...\n    \n    GENERATORSETS:\n      # This is old\n      - NAME: Genset\n        ...\n        CONSUMERS:\n          # This is old\n          - NAME: Consumer\n            ...\n          # This is old\n          - NAME: Consumer\n            ...\n      # This is old\n      - NAME: Genset\n        ...\n            \n    FUELCONSUMERS:\n      # This is old\n      - NAME: FuelConsumer\n        ...\n      # This is old\n      - NAME: FuelConsumer\n        ...\n    \n    DIRECT_EMITTER:\n      # This is old\n      - NAME: DirectEmitter\n        ...\n      # This is old\n      - NAME: DirectEmitter\n        ...\n    # This is old\n  - NAME: Installation\n    ...\n"})}),"\n",(0,o.jsx)(n.p,{children:"This model is no longer valid, and the duplicated installation names are highlighted.\nTo make this model valid these names needs to be changed. For example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="main.yaml"',children:"INSTALLATIONS:\n  # This is new\n  - NAME: Installation_A\n    ...\n    \n    GENERATORSETS:\n      # This is new\n      - NAME: Genset_A\n        ...\n        CONSUMERS:\n          # This is new\n          - NAME: Consumer_A\n            ...\n          # This is new\n          - NAME: Consumer_B\n            ...\n      # This is new\n      - NAME: Genset_B\n        ...\n            \n    FUELCONSUMERS:\n      # This is new\n      - NAME: FuelConsumer_A\n        ...\n      # This is new\n      - NAME: FuelConsumer_B\n        ...\n    \n    DIRECT_EMITTER:\n      # This is new\n      - NAME: DirectEmitter_A\n        ...\n      # This is new\n      - NAME: DirectEmitter_B\n        ...\n  # This is new\n  - NAME: Installation_B\n    ...\n"})}),"\n",(0,o.jsx)(n.p,{children:"This will make it possible to attribute results to each consumer by name, and removes any ambiguity\nwhen interpreting eCalc\u2122 results."}),"\n",(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"/ecalc/docs/about/references/INSTALLATIONS",children:"INSTALLATION"}),",\n",(0,o.jsx)(n.a,{href:"/ecalc/docs/about/references/GENERATORSETS",children:"GENERATORSET"}),",\n",(0,o.jsx)(n.a,{href:"/ecalc/docs/about/references/CONSUMERS",children:"CONSUMERS"}),",\n",(0,o.jsx)(n.a,{href:"/ecalc/docs/about/references/FUELCONSUMERS",children:"FUELCONSUMERS"}),",\n",(0,o.jsx)(n.a,{href:"/ecalc/docs/about/references/VENTING_EMITTERS",children:"VENTING_EMITTER"}),"\nfor more details about the relevant keywords."]}),"\n",(0,o.jsxs)(n.admonition,{title:"Are you using power from shore?",type:"tip",children:[(0,o.jsx)(n.p,{children:"We have implemented temporal categories for consumers to support the power from shore implementation in use."}),(0,o.jsxs)(n.p,{children:["Instead of duplicating the generator set and setting the ",(0,o.jsx)(n.code,{children:"POWER-FROM-SHORE"})," category,\nit is now possible to change the category at a certain date. This is the same syntax as other temporal models."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"CATEGORY:\n  2020-01-01: TURBINE-GENERATOR\n  2030-01-01: POWER-FROM-SHORE\n"})}),(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"/ecalc/docs/about/modelling/setup/installations/generator_sets_in_calculations#power-from-shore",children:"Power from shore"})," for more information."]})]}),"\n",(0,o.jsx)(n.h4,{id:"2-units-for-pump-and-compressor-charts",children:"2. UNITS for pump and compressor charts"}),"\n",(0,o.jsx)(n.p,{children:"Compressor and pump charts has previously had implicit units, without requiring the operator to specify what\nunits are actually being used. This increases the risk of wrong specification, and makes it more difficult to hand\nover models."}),"\n",(0,o.jsx)(n.p,{children:"To amend this issue, and to open up for more flexibility in regard to units, it is now mandatory to specify."}),"\n",(0,o.jsx)(n.p,{children:"To keep the old defaults you can do the following:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="main.yaml"',children:"FACILITY_INPUTS:\n  - NAME: single_speed_pump_chart\n    FILE: <some input csv>\n    # highlight-next-line\n    TYPE: PUMP_CHART_SINGLE_SPEED\n    # highlight-new-start\n    UNITS:\n      RATE: AM3_PER_HOUR\n      HEAD: M\n      EFFICIENCY: PERCENTAGE\n    # highlight-new-end\n  - NAME: variable_speed_pump_chart\n    FILE: <some input csv>\n    # highlight-next-line\n    TYPE: PUMP_CHART_VARIABLE_SPEED\n    # highlight-new-start\n    UNITS:\n      RATE: AM3_PER_HOUR\n      HEAD: M\n      EFFICIENCY: PERCENTAGE\n    # highlight-new-end\n\nMODELS:\n  - NAME: single_speed_compressor_chart\n    # highlight-start\n    TYPE: COMPRESSOR_CHART\n    CHART_TYPE: SINGLE_SPEED\n    # highlight-end\n    # highlight-new-start\n    UNITS:\n      HEAD: M\n      RATE: AM3_PER_HOUR\n      EFFICIENCY: FRACTION\n    # highlight-new-end\n    CURVES:\n      ...\n  - NAME: variable_speed_compressor_chart\n    # highlight-start\n    TYPE: COMPRESSOR_CHART\n    CHART_TYPE: VARIABLE_SPEED\n    # highlight-end\n    # highlight-new-start\n    UNITS:\n      HEAD: M\n      RATE: AM3_PER_HOUR\n      EFFICIENCY: FRACTION\n    # highlight-new-end\n    CURVES:\n      ...\n\n...\n"})}),"\n",(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"/ecalc/docs/about/modelling/setup/models/compressor_modelling/compressor_charts/",children:"COMPRESSOR CHART"}),"\nand ",(0,o.jsx)(n.a,{href:"../modelling/setup/facility_inputs/pump_modelling/pump_charts",children:"PUMP CHART"}),"\nfor more details about the relevant keywords."]}),"\n",(0,o.jsx)(n.h4,{id:"3-restrict-allowed-characters-in-component-names-and-emission-names",children:"3. Restrict allowed characters in component names and emission names"}),"\n",(0,o.jsxs)(n.p,{children:["Component names can now only consist of letters (a-z, upper and lower case), numbers (0-9), underscore (",(0,o.jsx)(n.code,{children:"_"}),"), hyphen (",(0,o.jsx)(n.code,{children:"-"}),") and space (",(0,o.jsx)(n.code,{children:" "}),")."]}),"\n",(0,o.jsxs)(n.p,{children:["Emission names can now only consist of letters (a-z, upper and lower case), numbers (0-9) and underscore (",(0,o.jsx)(n.code,{children:"_"}),")."]}),"\n",(0,o.jsx)(n.h4,{id:"4-name-no-longer-used-for-ltp-reporting-use-category-instead",children:"4. NAME no longer used for LTP reporting, use CATEGORY instead"}),"\n",(0,o.jsx)(n.p,{children:"We have categories for FLARE and COLD-VENTING-FUGITIVE, and have introduced categories for LOADING and STORAGE. These should now be used instead of NAME."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="main.yaml"',children:"INSTALLATIONS:\n  - NAME: Installation_A\n    ...\n    \n    GENERATORSETS:\n      - NAME: Genset_A\n        ...\n        CONSUMERS:\n          - NAME: Consumer_A\n            ...\n            \n    FUELCONSUMERS:\n      # This is old\n      - NAME: loading # Name will no longer be used in LTP reporting\n        # This is new\n        CATEGORY: LOADING # Category must be used to include it in LTP reporting\n        FUEL: Fuel_A\n        ENERGY_USAGE_MODEL:\n          TYPE: DIRECT\n          FUELRATE: Oil_rate_per_timestep\n          ...\n      # This is old\n      - NAME: storage # Name will no longer be used in LTP reporting\n        # This is new\n        CATEGORY: STORAGE # Category must be used to include it in LTP reporting\n        FUEL: Fuel_B\n        ENERGY_USAGE_MODEL:\n          TYPE: DIRECT\n          FUELRATE: Oil_rate_per_timestep\n          ...      \n      # This is old\n      - NAME: flare # Name will no longer be used in LTP reporting\n        # This is new\n        CATEGORY: FLARE # Category must be used to include it in LTP reporting\n        FUEL: Fuel_C\n        ENERGY_USAGE_MODEL:\n          TYPE: DIRECT\n          FUELRATE: Oil_rate_per_timestep\n          ...\n      # This is old\n      - NAME: cold_venting_fugitives_nmvoc # Name will no longer be used in LTP reporting\n        # This is new\n        CATEGORY: COLD-VENTING-FUGITIVE # Category must be used to include it in LTP reporting\n        FUEL: Fuel_D  # The fuel specification determines what emissions will be used in LTP\n        ENERGY_USAGE_MODEL:\n          TYPE: DIRECT\n          FUELRATE: Oil_rate_per_timestep\n          ...      \n \n...\n"})}),"\n",(0,o.jsx)(n.h4,{id:"5-not-possible-to-use-custom-category-names-pre-defined-categories-must-be-uppercase-with-hyphen-as-separator-ie-fuel-gas",children:"5. Not possible to use custom category names, pre-defined categories must be uppercase with hyphen as separator (i.e. FUEL-GAS)"}),"\n",(0,o.jsxs)(n.p,{children:["Only a limited pre-defined set of categories is valid input to the CATEGORY-keyword, it is no longer possible to use custom names.\nThe input is case-sensitive and must match exactly with the pre-defined names. See ",(0,o.jsx)(n.a,{href:"../references/CATEGORY",children:"CLI Docs"})," for full documentation."]}),"\n",(0,o.jsx)(n.h2,{id:"cli-migration",children:"CLI migration"}),"\n",(0,o.jsx)(n.p,{children:"This version includes some changes to how the CLI is invoked and changes to default behavior."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Invoking eCalc\u2122 directly is no longer supported, use ",(0,o.jsx)(n.code,{children:"ecalc run"})," instead."]}),"\n",(0,o.jsx)(n.li,{children:"Log level should be specified as the first argument + log to file"}),"\n",(0,o.jsx)(n.li,{children:"Model yaml-file needs to come last"}),"\n",(0,o.jsx)(n.li,{children:"Extrapolation (correction) is now always used and cannot be disabled"}),"\n",(0,o.jsxs)(n.li,{children:["Argument for LTP export has changed from: ",(0,o.jsx)(n.code,{children:"--centuries-ltp-export"})," to ",(0,o.jsx)(n.code,{children:"--ltp-export"})]}),"\n",(0,o.jsx)(n.li,{children:"Simple results are now default for json"}),"\n"]}),"\n",(0,o.jsxs)(n.h4,{id:"1-invoking-ecalc-directly-is-no-longer-supported-use-ecalc-run-instead",children:["1. Invoking eCalc\u2122 directly is no longer supported, use ",(0,o.jsx)(n.code,{children:"ecalc run"})," instead."]}),"\n",(0,o.jsxs)(n.p,{children:["To make it possible to add ",(0,o.jsx)(n.code,{children:"ecalc show"})," we added the ",(0,o.jsx)(n.code,{children:"ecalc run"})," command. In v8 it is required to specify ",(0,o.jsx)(n.code,{children:"run"})," when calculating a model."]}),"\n",(0,o.jsx)(n.p,{children:"If you previously ran eCalc\u2122 with this command"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ ecalc ./my-model.yaml\n"})}),"\n",(0,o.jsx)(n.p,{children:"you should now use"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ ecalc run ./my-model.yaml\n"})}),"\n",(0,o.jsx)(n.h4,{id:"2-log-level-should-be-specified-as-the-first-argument--log-to-file",children:"2. Log level should be specified as the first argument + log to file"}),"\n",(0,o.jsxs)(n.p,{children:["Previously you could specify the ",(0,o.jsx)(n.code,{children:"--log"})," argument after ",(0,o.jsx)(n.code,{children:"run"}),", this is no longer possible."]}),"\n",(0,o.jsx)(n.p,{children:"This is the new way of specifying log level."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ ecalc --log DEBUG run ./my-model.yaml\n"})}),"\n",(0,o.jsxs)(n.p,{children:["In addition we are introducing ",(0,o.jsx)(n.code,{children:"--log-folder <path>"})," where you can direct and store the log in a given path to easily\nlook at the log of running later than scrolling in the terminal window. Due to the excessive amount of logs that eCalc\nproduces when running at low log levels, we have set the log to only log at WARNING and above (WARNING + ERROR messages).\nThe user must make sure that the path/folder exists before running and that you have correct permissions, as eCalc will NOT\ndo that for you."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ ecalc --log DEBUG --log-folder . run ./my-model.yaml\n"})}),"\n",(0,o.jsxs)(n.p,{children:["As you see above, the argument ",(0,o.jsx)(n.strong,{children:"MUST"})," be added ",(0,o.jsx)(n.strong,{children:"BEFORE"})," the ",(0,o.jsx)(n.code,{children:"run"})," argument."]}),"\n",(0,o.jsx)(n.h4,{id:"3-model-yaml-file-needs-to-come-last",children:"3. Model yaml-file needs to come last"}),"\n",(0,o.jsx)(n.p,{children:"When running eCalc\u2122 you will now need to set the model file argument last."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"ecalc [OPTIONS] COMMAND [ARGS] [MODEL YAML-file]"})}),"\n",(0,o.jsxs)(n.p,{children:["See the ",(0,o.jsx)(n.a,{href:"../getting_started/cli/cli_reference",children:"CLI Docs"})," or run ",(0,o.jsx)(n.code,{children:"ecalc --help"})," for the full documentation."]}),"\n",(0,o.jsx)(n.h4,{id:"4-extrapolation-correction-is-no-longer-optional",children:"4. Extrapolation correction is no longer optional"}),"\n",(0,o.jsx)(n.p,{children:'We have removed the extrapolation correction argument. eCalc\u2122 will now always "extrapolate" values.\nThe main reason for making this change was that the feature was in general always used, in addition to being a confusing term.\nLet us know if you have a use-case where this was needed.'}),"\n",(0,o.jsxs)(n.h4,{id:"5-argument-for-ltp-export-has-changed-from---centuries-ltp-export-to---ltp-export",children:["5. Argument for LTP export has changed from: ",(0,o.jsx)(n.code,{children:"--centuries-ltp-export"})," to ",(0,o.jsx)(n.code,{children:"--ltp-export"})]}),"\n",(0,o.jsxs)(n.p,{children:["To prepare for Open Source and to make the LTP export more agnostic (even though the column names are heavily\naffected by Centuries), we simplify the argument to get LTP results. See ",(0,o.jsx)(n.a,{href:"../getting_started/cli/cli_reference",children:"CLI Docs"})," for\nfull documentation."]}),"\n",(0,o.jsx)(n.h4,{id:"6-simple-results-are-now-default-for-json",children:"6. Simple results are now default for json"}),"\n",(0,o.jsxs)(n.p,{children:["Detailed output (or any json) should mainly be used for QA and advanced users, and is no longer shown by default. To keep old behavior, the user now\nneeds to use the --detailed-output option when running the CLI. See ",(0,o.jsx)(n.a,{href:"../getting_started/cli/cli_reference#ecalc-run",children:"CLI reference docs"}),"\nfor more details."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(96540);const o={},t=s.createContext(o);function r(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);