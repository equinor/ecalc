"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2660],{12121:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>E,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"about/references/STREAMS","title":"STREAMS","description":"MODELS /","source":"@site/docs/about/references/STREAMS.md","sourceDirName":"about/references","slug":"/about/references/STREAMS","permalink":"/ecalc/docs/about/references/STREAMS","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/ecalc/tree/main/documentation/docs/about/references/STREAMS.md","tags":[],"version":"current","frontMatter":{},"sidebar":"about","previous":{"title":"STREAM","permalink":"/ecalc/docs/about/references/STREAM"},"next":{"title":"SUCTION_PRESSURE","permalink":"/ecalc/docs/about/references/SUCTION_PRESSURE"}}');var s=t(74848),o=t(28453);const c={},a="STREAMS",i={},l=[{value:"Description",id:"description",level:2},{value:"Format",id:"format",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"streams",children:"STREAMS"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/ecalc/docs/about/references/MODELS",children:"MODELS"})," /\n[...] /\n",(0,s.jsx)(n.a,{href:"/ecalc/docs/about/references/STREAMS",children:"STREAMS"})]}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["This keyword can ",(0,s.jsx)(n.strong,{children:"only"})," be utilised for a ",(0,s.jsx)(n.code,{children:"VARIABLE_SPEED_COMPRESSOR_TRAIN_MULTIPLE_STREAMS_AND_PRESSURES"})," model type."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"STREAMS"})," is a list of all in- and out-going streams for the compressor train."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The same equation of state (EOS) must be used for each INGOING stream fluid models"}),"\n",(0,s.jsxs)(n.li,{children:["OUTGOING fluid models ",(0,s.jsx)(n.strong,{children:"cannot"})," be specified."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"format",children:"Format"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: <model name>\n    TYPE: VARIABLE_SPEED_COMPRESSOR_TRAIN_MULTIPLE_STREAMS_AND_PRESSURES\n    STREAMS: \n      - NAME: <name of stream 1>\n        TYPE: INGOING\n        FLUID_MODEL: <reference to fluid model, must be defined in MODELS>\n      - NAME: <name of stream 2>\n        TYPE: INGOING\n        FLUID_MODEL: <reference to fluid model, must be defined in MODELS>\n      - ...\n      - NAME: <name of stream N>\n        TYPE: OUTGOING \n    ...\n"})}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: compressor_model\n    TYPE: VARIABLE_SPEED_COMPRESSOR_TRAIN_MULTIPLE_STREAMS_AND_PRESSURES\n    STREAMS: \n      - NAME: 1_stage_inlet\n        TYPE: INGOING\n        FLUID_MODEL: fluid_model_1\n      - NAME: 3_stage_inlet\n        TYPE: INGOING\n        FLUID_MODEL: fluid_model_2\n      - NAME: 2_stage_outlet\n        TYPE: OUTGOING\n    ...\n"})})]})}function E(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var r=t(96540);const s={},o=r.createContext(s);function c(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);