"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8202],{13788:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>_});const r=JSON.parse('{"id":"about/references/MAXIMUM_PRESSURE_RATIO_PER_STAGE","title":"MAXIMUM_PRESSURE_RATIO_PER_STAGE","description":"MODELS /","source":"@site/docs/about/references/MAXIMUM_PRESSURE_RATIO_PER_STAGE.md","sourceDirName":"about/references","slug":"/about/references/MAXIMUM_PRESSURE_RATIO_PER_STAGE","permalink":"/ecalc/docs/about/references/MAXIMUM_PRESSURE_RATIO_PER_STAGE","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/ecalc/tree/main/documentation/docs/about/references/MAXIMUM_PRESSURE_RATIO_PER_STAGE.md","tags":[],"version":"current","frontMatter":{},"sidebar":"about","previous":{"title":"MAXIMUM_POWER","permalink":"/ecalc/docs/about/references/MAXIMUM_POWER"},"next":{"title":"MAX_USAGE_FROM_SHORE","permalink":"/ecalc/docs/about/references/MAX_USAGE_FROM_SHORE"}}');var o=s(74848),t=s(28453);const i={},c="MAXIMUM_PRESSURE_RATIO_PER_STAGE",a={},_=[{value:"Description",id:"description",level:2},{value:"Functionality",id:"functionality",level:2},{value:"Format",id:"format",level:2},{value:"Example",id:"example",level:2}];function E(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"maximum_pressure_ratio_per_stage",children:"MAXIMUM_PRESSURE_RATIO_PER_STAGE"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/ecalc/docs/about/references/MODELS",children:"MODELS"})," /\n",(0,o.jsx)(n.a,{href:"/ecalc/docs/about/references/MAXIMUM_PRESSURE_RATIO_PER_STAGE",children:"MAXIMUM_PRESSURE_RATIO_PER_STAGE"})]}),"\n",(0,o.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"MAXIMUM_PRESSURE_RATIO_PER_STAGE"})," is used in the process of determining (at run time) the number of compressors\nin a ",(0,o.jsx)(n.a,{href:"/ecalc/docs/about/modelling/setup/models/compressor_modelling/compressor_models_types/simplified_variable_speed_compressor_train_model",children:"SIMPLIFIED_VARIABLE_SPEED_COMPRESSOR_TRAIN"}),"\nwith unknown stages. The number of compressors is set such that there are just enough compressors to ensure no pressure ratios are above the given\n",(0,o.jsx)(n.code,{children:"MAXIMUM_PRESSURE_RATIO_PER_STAGE"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"functionality",children:"Functionality"}),"\n",(0,o.jsxs)(n.p,{children:["This is an optional setting and is ",(0,o.jsx)(n.strong,{children:"only"})," supported for ",(0,o.jsx)(n.a,{href:"/ecalc/docs/about/modelling/setup/models/compressor_modelling/compressor_models_types/simplified_variable_speed_compressor_train_model",children:"SIMPLIFIED_VARIABLE_SPEED_COMPRESSOR_TRAIN"})," with unknown stages, i.e. if ",(0,o.jsx)(n.code,{children:"STAGES"})," are not specified."]}),"\n",(0,o.jsx)(n.h2,{id:"format",children:"Format"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: <model name>\n    TYPE: SIMPLIFIED_VARIABLE_SPEED_COMPRESSOR_TRAIN\n    FLUID_MODEL: <reference to fluid model, must be defined in [MODELS]>\n    COMPRESSOR_TRAIN:\n      MAXIMUM_PRESSURE_RATIO_PER_STAGE: <maximum pressure ratio per stage>\n      COMPRESSOR_CHART: <reference to compressor chart model used for all stages, must be defined in [MODELS] or [FACILITY_INPUTS]>\n      INLET_TEMPERATURE: <inlet temperature for all stages>\n    POWER_ADJUSTMENT_CONSTANT: <Optional constant MW adjustment added to the model>\n    ...\n"})}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"MODELS:\n  - NAME: simplified_compressor_train_model\n    TYPE: SIMPLIFIED_VARIABLE_SPEED_COMPRESSOR_TRAIN\n    FLUID_MODEL: some_fluid_model\n    COMPRESSOR_TRAIN:\n      MAXIMUM_PRESSURE_RATIO_PER_STAGE: 3.5\n      COMPRESSOR_CHART: some_compressor_chart\n      INLET_TEMPERATURE: 30\n    ...\n"})})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(E,{...e})}):E(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(96540);const o={},t=r.createContext(o);function i(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);