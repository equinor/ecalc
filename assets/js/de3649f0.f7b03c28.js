"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4154],{28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>l});var n=i(96540);const o={},s=n.createContext(o);function r(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(s.Provider,{value:t},e.children)}},54432:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"contribute/get_started","title":"Get Started","description":"Welcome! We are glad that you want to contribute to our project! \ud83d\udc96","source":"@site/docs/contribute/get_started.md","sourceDirName":"contribute","slug":"/contribute/get_started","permalink":"/ecalc/docs/contribute/get_started","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/ecalc/tree/main/documentation/docs/contribute/get_started.md","tags":[],"version":"current","frontMatter":{},"sidebar":"contribute","previous":{"title":"Git","permalink":"/ecalc/docs/contribute/guides/git"}}');var o=i(74848),s=i(28453);const r={},l="Get Started",a={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"How to contribute",id:"how-to-contribute",level:2},{value:"Initiate change",id:"initiate-change",level:3},{value:"Make a Pull Request",id:"make-a-pull-request",level:3},{value:"Get code review",id:"get-code-review",level:3},{value:"Guidelines",id:"guidelines",level:2},{value:"Pull Requests",id:"pull-requests",level:2},{value:"Git commit format",id:"git-commit-format",level:2},{value:"Readability",id:"readability",level:2},{value:"Code style",id:"code-style",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"get-started",children:"Get Started"})}),"\n",(0,o.jsx)(t.p,{children:"Welcome! We are glad that you want to contribute to our project! \ud83d\udc96"}),"\n",(0,o.jsx)(t.p,{children:"This project accepts contributions via GitHub Pull Requests."}),"\n",(0,o.jsx)(t.p,{children:"This document outlines the process to help get your contribution accepted."}),"\n",(0,o.jsx)(t.p,{children:"There are many ways to contribute:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Suggest ",(0,o.jsx)(t.a,{href:"https://github.com/equinor/ecalc/issues/new?assignees=&labels=&template=feature_request.md&title=",children:"features"})]}),"\n",(0,o.jsxs)(t.li,{children:["Suggest ",(0,o.jsx)(t.a,{href:"https://github.com/equinor/ecalc/issues/new?assignees=&labels=bug&template=code-maintainer.md&title=",children:"changes"})]}),"\n",(0,o.jsxs)(t.li,{children:["Report ",(0,o.jsx)(t.a,{href:"https://github.com/equinor/ecalc/issues/new?assignees=&labels=bug&template=bug_report.md&title=",children:"bugs"})]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["You can start by looking through the ",(0,o.jsx)(t.a,{href:"https://github.com/equinor/ecalc/issues",children:"GitHub Issues"})," filtered by labels."]}),"\n",(0,o.jsxs)(t.admonition,{type:"info",children:[(0,o.jsxs)(t.p,{children:["We follow some contributor guidelines that you will find in our ",(0,o.jsx)(t.a,{href:"#guidelines",children:"contributor guidelines"}),"."]}),(0,o.jsxs)(t.p,{children:["Don't worry if your contribution does not follow all the guidelines. We will guide you in the ",(0,o.jsx)(t.a,{href:"#get-code-review",children:"code review process"}),".\nThe threshold for contributing is low, and we appreciate any contribution great or small. \ud83d\ude4f"]})]}),"\n",(0,o.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["See ",(0,o.jsx)(t.a,{href:"/ecalc/docs/contribute/documentation-guide/documentation",children:"Documentation guide"})," for how to get started with contributions to this\ndocumentation."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"how-to-contribute",children:"How to contribute"}),"\n",(0,o.jsx)(t.p,{children:"Contribution is done in 3 simple steps:"}),"\n",(0,o.jsx)(t.h3,{id:"initiate-change",children:"Initiate change"}),"\n",(0,o.jsx)(t.p,{children:"For major changes, please open an issue first to discuss what you would like to change. For smaller changes, it is sufficient\nto explain the change without referring to an issue."}),"\n",(0,o.jsx)(t.h3,{id:"make-a-pull-request",children:"Make a Pull Request"}),"\n",(0,o.jsx)(t.p,{children:"To contribute to the project, you will have to make the change and create a Pull Request on GitHub. How you do this depends on your role."}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["Equinor internal contributors, you may open a ",(0,o.jsx)(t.a,{href:"/ecalc/docs/contribute/guides/git#pull-requests",children:"Pull Request directly"}),","]}),"\n",(0,o.jsxs)(t.li,{children:["Independent contributors, you will ",(0,o.jsx)(t.a,{href:"/ecalc/docs/contribute/guides/git#fork-the-repository",children:"Fork the repository"}),"."]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"get-code-review",children:"Get code review"}),"\n",(0,o.jsx)(t.p,{children:"Once a Pull Request has been made, we will give you feedback and maybe suggest changes."}),"\n",(0,o.jsxs)(t.p,{children:["The core team looks at pull requests on a regular basis, we review the code and guide you if needed.\nHere you will find more information about the\n",(0,o.jsx)(t.a,{href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews",children:"GitHub Code Review Process"})]}),"\n",(0,o.jsx)(t.h2,{id:"guidelines",children:"Guidelines"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"For major changes, please open an issue first to discuss what you would like to change"}),"\n",(0,o.jsx)(t.li,{children:"Work on your own fork of the main repo"}),"\n",(0,o.jsx)(t.li,{children:"Use a separate branch for each issue you\u2019re working on"}),"\n",(0,o.jsxs)(t.li,{children:["Use conventional commit. See our ",(0,o.jsx)(t.a,{href:"#git-commit-format",children:"Git commit format"})," for details,\nand our ",(0,o.jsx)(t.a,{href:"/ecalc/docs/contribute/guides/git",children:"Git guide"})," for our full guide"]}),"\n",(0,o.jsxs)(t.li,{children:["Please include ",(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Unit_testing",children:"unit tests"})," with all your code changes"]}),"\n",(0,o.jsxs)(t.li,{children:["We follow ",(0,o.jsx)(t.a,{href:"https://trunkbaseddevelopment.com/",children:"Trunk Based Development"})," style of working with short-lived feature\nbranches."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"pull-requests",children:"Pull Requests"}),"\n",(0,o.jsxs)(t.p,{children:["Please try to make your ",(0,o.jsx)(t.a,{href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests",children:"Pull Requests"})," easy to review for us."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Make small pull requests. The smaller, the faster to review and the more likely it will be merged soon."}),"\n",(0,o.jsx)(t.li,{children:"Don't make changes unrelated to the goals of your PR."}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["While you're writing up the pull request, you can add ",(0,o.jsx)(t.code,{children:"closes #<issue number>"})," in the message body where issue number\nis the issue you're fixing. Therefore, an example would be ",(0,o.jsx)(t.code,{children:"closes #42"})," would close issue #42."]}),"\n",(0,o.jsx)(t.h2,{id:"git-commit-format",children:"Git commit format"}),"\n",(0,o.jsxs)(t.p,{children:["Git commits are required to follow ",(0,o.jsx)(t.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/",children:"conventional commits"}),". Please see\nour ",(0,o.jsx)(t.a,{href:"/ecalc/docs/contribute/guides/conventional_commits",children:"Conventional Commit Guide"})," for examples."]}),"\n",(0,o.jsx)(t.h2,{id:"readability",children:"Readability"}),"\n",(0,o.jsxs)(t.p,{children:["We use the ",(0,o.jsx)(t.a,{href:"https://pre-commit.com/",children:"pre-commit hooks"})," in order to ensure uniform formatting and to exclude potential code issues."]}),"\n",(0,o.jsx)(t.p,{children:"We strive for readable code. A few good tips are:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Self-documenting_code",children:"Self-documenting code"})," with self-explaining variable names"]}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Composition_over_inheritance",children:"Composition over inheritance"})}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Functional_programming",children:"Functional code"})," over Object-Oriented Code"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://ruggedsoftware.org/",children:"Rugged code"})," to write more robust code"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Domain-driven_design",children:"Domain Driven Design"})," to to match the code with the domain we are working on"]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"code-style",children:"Code style"}),"\n",(0,o.jsx)(t.p,{children:"Except for the pre-commits hooks mentioned above, we also strive to follow the following code style:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Use capital letters for constants i.e. SECONDS_PER_HOUR"}),"\n",(0,o.jsx)(t.li,{children:"Try to split methods/modules/classes into smaller bits of code"}),"\n",(0,o.jsx)(t.li,{children:"Remove, do not comment out, unused code"}),"\n",(0,o.jsx)(t.li,{children:"Use types and type hinting"}),"\n",(0,o.jsx)(t.li,{children:"We comment the code when it is not self-explanatory"}),"\n",(0,o.jsxs)(t.li,{children:["Be consistent with existing code style - try to make it look like the code is written by ",(0,o.jsx)(t.strong,{children:"one"})," developer"]}),"\n",(0,o.jsxs)(t.li,{children:["For Python, we follow ",(0,o.jsx)(t.a,{href:"https://peps.python.org/pep-0008/",children:"PEP 8 \u2013 Style Guide for Python Code"})," and ",(0,o.jsx)(t.a,{href:"https://peps.python.org/pep-0020/",children:"PEP 20 - The Zen of Python"}),":"]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"Beautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n"})}),"\n",(0,o.jsx)(t.p,{children:"Please reach out to us if you have any questions. \ud83d\udc4b"}),"\n",(0,o.jsx)(t.p,{children:"Thank you for your contribution! \ud83c\udf89"})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);